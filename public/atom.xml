<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你说你要一场革命</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://weehaa.top/"/>
  <updated>2021-04-29T03:41:36.627Z</updated>
  <id>http://weehaa.top/</id>
  
  <author>
    <name>huang yong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python3列表、元组、字典序列化反序列化</title>
    <link href="http://weehaa.top/2021/04/29/python3%E5%88%97%E8%A1%A8%E3%80%81%E5%85%83%E7%BB%84%E3%80%81%E5%AD%97%E5%85%B8%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://weehaa.top/2021/04/29/python3列表、元组、字典序列化反序列化/</id>
    <published>2021-04-29T03:32:32.000Z</published>
    <updated>2021-04-29T03:41:36.627Z</updated>
    
    <content type="html"><![CDATA[<p>序列化，反序列化分别使用json.dumps()、json.loads()。</p><p>列表：序列化后是str，反序列化是list<br>元组：序列化后是str，反序列化是list<br>字典：序列化后是str，反序列化是dict</p><a id="more"></a><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import json</span><br><span class="line">&gt;&gt;&gt; tmp&#x3D;[1,2,3]</span><br><span class="line">&gt;&gt;&gt; jtmp&#x3D;json.dumps(tmp)</span><br><span class="line">&gt;&gt;&gt; type(jtmp)</span><br><span class="line">&lt;class &#39;str&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; type(json.loads(jtmp))</span><br><span class="line">&lt;class &#39;list&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; tmp&#x3D;(1,2,3)</span><br><span class="line">&gt;&gt;&gt; jtmp&#x3D;json.dumps(tmp)</span><br><span class="line">&gt;&gt;&gt; type(jtmp)</span><br><span class="line">&lt;class &#39;str&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; type(json.loads(jtmp))</span><br><span class="line">&lt;class &#39;list&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; tmp&#x3D;&#123;1:1,2:2&#125;</span><br><span class="line">&gt;&gt;&gt; jtmp&#x3D;json.dumps(tmp)</span><br><span class="line">&gt;&gt;&gt; type(jtmp)</span><br><span class="line">&lt;class &#39;str&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; type(json.loads(jtmp))</span><br><span class="line">&lt;class &#39;dict&#39;&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;序列化，反序列化分别使用json.dumps()、json.loads()。&lt;/p&gt;&lt;p&gt;列表：序列化后是str，反序列化是list&lt;br&gt;元组：序列化后是str，反序列化是list&lt;br&gt;字典：序列化后是str，反序列化是dict&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pytorch自定义损失函数</title>
    <link href="http://weehaa.top/2021/04/15/pytorch%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/"/>
    <id>http://weehaa.top/2021/04/15/pytorch自定义损失函数/</id>
    <published>2021-04-15T08:40:39.000Z</published>
    <updated>2021-04-15T10:31:01.447Z</updated>
    
    <content type="html"><![CDATA[<p>在深度学习中有时需要使用自定义损失函数，或者为了更好的理解各个环节而使用自定义损失函数。<br>在pytorch中自定义损失函数实现的比较简单，就像实现一个小型网络一样。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class LossFunc(nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(LossFunc, self).__init__()        </span><br><span class="line">    def forward(self, prelist, ylist):</span><br><span class="line">        dif&#x3D;torch.abs(prelist-ylist)</span><br><span class="line">        coef&#x3D;ylist.clone()</span><br><span class="line">        coef[coef&gt;&#x3D;0.5]&#x3D;2</span><br><span class="line">        coef[coef&lt;0.5]&#x3D;1</span><br><span class="line">        dif&#x3D;torch.mul(dif,coef)       </span><br><span class="line">        return torch.sum(dif)&#x2F;&#x2F;ylist.size()[0]</span><br><span class="line">mylossfunc&#x3D;LossFunc()</span><br><span class="line">mylossfunc&#x3D;mylossfunc.cuda()</span><br></pre></td></tr></table></figure><a id="more"></a><p>这是一个自己写的 均差，相当于均方误差没有求平方。<br>写的时候注意尽量求平均的，不要导致返回的结果过大，可以类比着已有的损失函数，做部分修改。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在深度学习中有时需要使用自定义损失函数，或者为了更好的理解各个环节而使用自定义损失函数。&lt;br&gt;在pytorch中自定义损失函数实现的比较简单，就像实现一个小型网络一样。&lt;/p&gt;&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class LossFunc(nn.Module):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(LossFunc, self).__init__()        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def forward(self, prelist, ylist):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dif&amp;#x3D;torch.abs(prelist-ylist)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        coef&amp;#x3D;ylist.clone()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        coef[coef&amp;gt;&amp;#x3D;0.5]&amp;#x3D;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        coef[coef&amp;lt;0.5]&amp;#x3D;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dif&amp;#x3D;torch.mul(dif,coef)       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return torch.sum(dif)&amp;#x2F;&amp;#x2F;ylist.size()[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mylossfunc&amp;#x3D;LossFunc()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mylossfunc&amp;#x3D;mylossfunc.cuda()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="pytorch" scheme="http://weehaa.top/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>jupyter日常测性能</title>
    <link href="http://weehaa.top/2021/04/15/jupyter%E6%97%A5%E5%B8%B8%E6%B5%8B%E6%80%A7%E8%83%BD/"/>
    <id>http://weehaa.top/2021/04/15/jupyter日常测性能/</id>
    <published>2021-04-15T08:15:17.000Z</published>
    <updated>2021-04-15T08:28:43.599Z</updated>
    
    <content type="html"><![CDATA[<p>在jupyter中日常测试不同表达方式的执行效率，进而做取舍时，直接新开一行以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%%timeit</span><br></pre></td></tr></table></figure><br>开头即可</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">way1&#x3D;LossFunc()</span><br><span class="line">way1&#x3D;way1.cuda()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%timeit</span><br><span class="line">tmp&#x3D;way1(torch.rand(10000,1),torch.rand(10000,1))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在jupyter中日常测试不同表达方式的执行效率，进而做取舍时，直接新开一行以&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python生成随机字符串</title>
    <link href="http://weehaa.top/2021/03/24/python%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://weehaa.top/2021/03/24/python生成随机字符串/</id>
    <published>2021-03-24T05:16:42.000Z</published>
    <updated>2021-03-24T05:24:47.232Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>1.大小写字母<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import random, string</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.join(random.sample(string.ascii_letters,9))</span><br><span class="line">&#39;HkJdpZclC&#39;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>2.大小字母+数字（字母开头）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import random, string</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.join(random.sample(string.ascii_letters,1)+random.sample(string.ascii_letters+string.digits,9))</span><br><span class="line">&#39;CX41uNHykR&#39;</span><br></pre></td></tr></table></figure></p><h3 id="元素拆解"><a href="#元素拆解" class="headerlink" title="元素拆解"></a>元素拆解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string.ascii_letters</span><br><span class="line">&#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</span><br><span class="line">&gt;&gt;&gt; string.digits</span><br><span class="line">&#39;0123456789&#39;</span><br><span class="line">&gt;&gt;&gt; random.sample(&#39;123456789&#39;, 4)</span><br><span class="line">[&#39;7&#39;, &#39;8&#39;, &#39;5&#39;, &#39;4&#39;]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;方法&quot;&gt;&lt;a href=&quot;#方法&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h3&gt;&lt;p&gt;1.大小写字母&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import random, string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;quot;&amp;quot;.join(random.sample(string.ascii_letters,9))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#39;HkJdpZclC&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>清空文件的几种方法</title>
    <link href="http://weehaa.top/2021/03/09/%E6%B8%85%E7%A9%BA%E6%96%87%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://weehaa.top/2021/03/09/清空文件的几种方法/</id>
    <published>2021-03-09T03:25:59.000Z</published>
    <updated>2021-03-09T03:30:57.815Z</updated>
    
    <content type="html"><![CDATA[<h3 id="重定向方式"><a href="#重定向方式" class="headerlink" title="重定向方式"></a>重定向方式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 1.</span><br><span class="line">&gt; test.txt</span><br><span class="line"># 2.</span><br><span class="line">: &gt; test.txt</span><br><span class="line"># 3.</span><br><span class="line">true &gt; test.txt</span><br></pre></td></tr></table></figure><h3 id="使用工具指令"><a href="#使用工具指令" class="headerlink" title="使用工具指令"></a>使用工具指令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 4.</span><br><span class="line">cat &#x2F;dev&#x2F;null &gt; test.txt</span><br><span class="line"># 5.</span><br><span class="line">cp &#x2F;dev&#x2F;null test.txt</span><br><span class="line"># 6.</span><br><span class="line">dd if&#x3D;&#x2F;dev&#x2F;null of&#x3D;test.txt</span><br><span class="line"># 7.</span><br><span class="line">echo -n &quot;&quot; &gt; test.txt # -n是为了是不显示空白行</span><br><span class="line"># 8.</span><br><span class="line">echo -n &gt; test.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;重定向方式&quot;&gt;&lt;a href=&quot;#重定向方式&quot; class=&quot;headerlink&quot; title=&quot;重定向方式&quot;&gt;&lt;/a&gt;重定向方式&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="linux" scheme="http://weehaa.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>python跳出if语句</title>
    <link href="http://weehaa.top/2021/02/04/python%E8%B7%B3%E5%87%BAif%E8%AF%AD%E5%8F%A5/"/>
    <id>http://weehaa.top/2021/02/04/python跳出if语句/</id>
    <published>2021-02-04T06:39:00.000Z</published>
    <updated>2021-02-04T07:03:30.228Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>喜欢在循环、函数里使用多个单行的if判断，如果true直接跳出。<br>类似常用的传值类型判断。<br>类似以下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def func(a):</span><br><span class="line">    if a&#x3D;&#x3D;&quot;&quot;:print(&quot;empty value&quot;);return</span><br><span class="line">    if a%10&#x3D;&#x3D;0:print(&quot;err vaule&quot;);return</span><br><span class="line"></span><br><span class="line">for i in range(100):</span><br><span class="line">    if key1 not in dict1:print(&quot;err key&quot;);continue</span><br><span class="line">    if dict1[key1]&#x3D;&#x3D;&quot;&quot;:print(&quot;empty value&quot;);continue</span><br></pre></td></tr></table></figure><br>这种句式的好处是逻辑非常清晰。</p><a id="more"></a><p>但是有时要在if里嵌套if，因为它不是函数也不是循环，就无法正常退出。<br>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if 存在文件a:</span><br><span class="line">    if 存在a文件昨天日期的备份：结束</span><br><span class="line">    备份a并加上昨天的日期</span><br></pre></td></tr></table></figure></p><p>当然可以用if…else解决，但是结构就不那么清晰</p><h3 id="我的多此一举的解决方法"><a href="#我的多此一举的解决方法" class="headerlink" title="我的多此一举的解决方法"></a>我的多此一举的解决方法</h3><p>为了达到我的逐行判断、逻辑清晰的目的，我决定这么使用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in range(1):</span><br><span class="line">    if 不存在a：print(&quot;不存在a&quot;);continue</span><br><span class="line">    if 存在a文件昨天日期的备份:continue</span><br><span class="line">    备份a并加上昨天的日期</span><br></pre></td></tr></table></figure></p><p>整体结构很简单。<br>相当于在备份a前加了两个判断。</p><p>我讨厌大规模的for循环、嵌套for循环，但却喜欢1的for循环。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;喜欢在循环、函数里使用多个单行的if判断，如果true直接跳出。&lt;br&gt;类似常用的传值类型判断。&lt;br&gt;类似以下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def func(a):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if a&amp;#x3D;&amp;#x3D;&amp;quot;&amp;quot;:print(&amp;quot;empty value&amp;quot;);return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if a%10&amp;#x3D;&amp;#x3D;0:print(&amp;quot;err vaule&amp;quot;);return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in range(100):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if key1 not in dict1:print(&amp;quot;err key&amp;quot;);continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if dict1[key1]&amp;#x3D;&amp;#x3D;&amp;quot;&amp;quot;:print(&amp;quot;empty value&amp;quot;);continue&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这种句式的好处是逻辑非常清晰。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>mac使用expect自动输入</title>
    <link href="http://weehaa.top/2021/01/28/mac%E4%BD%BF%E7%94%A8expect%E8%87%AA%E5%8A%A8%E8%BE%93%E5%85%A5/"/>
    <id>http://weehaa.top/2021/01/28/mac使用expect自动输入/</id>
    <published>2021-01-28T09:41:42.000Z</published>
    <updated>2021-02-01T05:41:44.203Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>以ssh登陆自动输入密码为例</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;expect</span><br><span class="line">spawn ssh -p 1*** pi@***.cn</span><br><span class="line"></span><br><span class="line">expect &quot;*password:*&quot; &#123; send &quot;J***\r&quot;;interact &#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>password:前后星号是通配符，其后位置是隐藏了个人信息。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;以ssh登陆自动输入密码为例&lt;/p&gt;&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!&amp;#x2F;usr&amp;#x2F;bin&amp;#x2F;expect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spawn ssh -p 1*** pi@***.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;expect &amp;quot;*password:*&amp;quot; &amp;#123; send &amp;quot;J***\r&amp;quot;;interact &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="Mac" scheme="http://weehaa.top/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>具体工程中cpu、内存使用感受</title>
    <link href="http://weehaa.top/2021/01/14/%E5%85%B7%E4%BD%93%E5%B7%A5%E7%A8%8B%E4%B8%ADcpu%E3%80%81%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E6%84%9F%E5%8F%97/"/>
    <id>http://weehaa.top/2021/01/14/具体工程中cpu、内存使用感受/</id>
    <published>2021-01-14T07:04:09.000Z</published>
    <updated>2021-01-18T08:30:05.378Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>做了一个有几十亿数据，几千万用户，截止目前，数据刚收集没多久。<br>对内存和cpu的使用率有一点总结。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>就像一般服务器的负载原小于核心数才好一样，内存和cpu是重要资源，随着数据的增长可能大幅增加。<br>在设计算法时，将它们控制在一个较低百分比十分重要。<br>以我处理的数据为例，5个线程一起跑，要处理的每个文件在2G多，还在持续增长。<br>在并发处理时，16G的内存能达到90%，这是非常不好的。<br>经过一些分割处理，将文件减小到原来的1/16，文件数量也增加了16倍。<br>拿文件数量换了内存空间。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;做了一个有几十亿数据，几千万用户，截止目前，数据刚收集没多久。&lt;br&gt;对内存和cpu的使用率有一点总结。&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="总结" scheme="http://weehaa.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>vim配置tab等于4空格</title>
    <link href="http://weehaa.top/2021/01/14/vim%E9%85%8D%E7%BD%AEtab%E7%AD%89%E4%BA%8E4%E7%A9%BA%E6%A0%BC/"/>
    <id>http://weehaa.top/2021/01/14/vim配置tab等于4空格/</id>
    <published>2021-01-14T03:27:09.000Z</published>
    <updated>2021-01-14T03:29:14.708Z</updated>
    
    <content type="html"><![CDATA[<p>在/etc/vim/vimrc中添加或修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot; add tab space</span><br><span class="line">set ts&#x3D;4</span><br><span class="line">set softtabstop&#x3D;4</span><br><span class="line">set shiftwidth&#x3D;4</span><br><span class="line">set expandtab</span><br><span class="line">set autoindent</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在/etc/vim/vimrc中添加或修改&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="vim" scheme="http://weehaa.top/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>golang统一处理err</title>
    <link href="http://weehaa.top/2021/01/14/golang%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86err/"/>
    <id>http://weehaa.top/2021/01/14/golang统一处理err/</id>
    <published>2021-01-14T02:50:46.000Z</published>
    <updated>2021-01-14T02:58:43.962Z</updated>
    
    <content type="html"><![CDATA[<p>程序写完，一堆nil看着难受，以后统一这么写吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">func FuckErr(err error)&#123;</span><br><span class="line">    if err!&#x3D;nil&#123;</span><br><span class="line">        panic(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;程序写完，一堆nil看着难受，以后统一这么写吧&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="golang" scheme="http://weehaa.top/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu开机执行自定义脚本</title>
    <link href="http://weehaa.top/2021/01/13/ubuntu%E5%BC%80%E6%9C%BA%E6%89%A7%E8%A1%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E8%84%9A%E6%9C%AC/"/>
    <id>http://weehaa.top/2021/01/13/ubuntu开机执行自定义脚本/</id>
    <published>2021-01-13T10:02:01.000Z</published>
    <updated>2021-01-13T10:14:42.931Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>切换到root。<br>没有的文件自己创建新的。</p><h3 id="创建或修改rc-local-service"><a href="#创建或修改rc-local-service" class="headerlink" title="创建或修改rc-local.service"></a>创建或修改rc-local.service</h3><p>vim /etc/systemd/system/rc-local.service</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit] </span><br><span class="line">Description&#x3D;&#x2F;etc&#x2F;rc.local Compatibility </span><br><span class="line">ConditionPathExists&#x3D;&#x2F;etc&#x2F;rc.local </span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">Type&#x3D;forking </span><br><span class="line">ExecStart&#x3D;&#x2F;etc&#x2F;rc.local start </span><br><span class="line">TimeoutSec&#x3D;0 </span><br><span class="line">StandardOutput&#x3D;tty </span><br><span class="line">RemainAfterExit&#x3D;yes </span><br><span class="line">SysVStartPriority&#x3D;99 </span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="穿件或修改对应的rc-local"><a href="#穿件或修改对应的rc-local" class="headerlink" title="穿件或修改对应的rc.local"></a>穿件或修改对应的rc.local</h3><p>vim  /etc/rc.local</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh -e </span><br><span class="line">## rc.local</span><br><span class="line"></span><br><span class="line"># This script is executed at the end of each multiuser runlevel.</span><br><span class="line"># Make sure that the script will &quot;exit 0&quot; on success or any other </span><br><span class="line"># value on error. </span><br><span class="line"># In order to enable or disable this script just change the execution  bits. </span><br><span class="line"># By default this script does nothing. </span><br><span class="line"></span><br><span class="line">#start script</span><br><span class="line"></span><br><span class="line">cd &#x2F;home&#x2F;h2&#x2F;stat\_data</span><br><span class="line">python3 switchControl.py &gt;&gt; control.log &amp;</span><br><span class="line"></span><br><span class="line">#end script</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><h3 id="加权限"><a href="#加权限" class="headerlink" title="加权限"></a>加权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x &#x2F;etc&#x2F;rc.local</span><br></pre></td></tr></table></figure><h3 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable rc-local</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rc-local.service</span><br></pre></td></tr></table></figure><h3 id="查看当前运行状态"><a href="#查看当前运行状态" class="headerlink" title="查看当前运行状态"></a>查看当前运行状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status rc-local.service</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>从上面配置可以看出，/etc/systemd/system/下的服务名可以随意设定。<br>里面对应的local文件路径要写对。<br>然后看开启服务、运行服务、查看状态即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;p&gt;切换到root。&lt;br&gt;没有的文件自己创建新的。&lt;/p&gt;&lt;h3 id=&quot;创建或修改rc-local-service&quot;&gt;&lt;a href=&quot;#创建或修改rc-local-service&quot; class=&quot;headerlink&quot; title=&quot;创建或修改rc-local.service&quot;&gt;&lt;/a&gt;创建或修改rc-local.service&lt;/h3&gt;&lt;p&gt;vim /etc/systemd/system/rc-local.service&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Unit] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Description&amp;#x3D;&amp;#x2F;etc&amp;#x2F;rc.local Compatibility &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ConditionPathExists&amp;#x3D;&amp;#x2F;etc&amp;#x2F;rc.local &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Service] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type&amp;#x3D;forking &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ExecStart&amp;#x3D;&amp;#x2F;etc&amp;#x2F;rc.local start &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TimeoutSec&amp;#x3D;0 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StandardOutput&amp;#x3D;tty &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RemainAfterExit&amp;#x3D;yes &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SysVStartPriority&amp;#x3D;99 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Install]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WantedBy&amp;#x3D;multi-user.target&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="ubuntu" scheme="http://weehaa.top/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>golang多线程简单逻辑</title>
    <link href="http://weehaa.top/2021/01/13/golang%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AE%80%E5%8D%95%E9%80%BB%E8%BE%91/"/>
    <id>http://weehaa.top/2021/01/13/golang多线程简单逻辑/</id>
    <published>2021-01-13T08:58:11.000Z</published>
    <updated>2021-01-13T09:38:06.004Z</updated>
    
    <content type="html"><![CDATA[<h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>实现指定个核心最大化使用，比如核心总数减一。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line">import (</span><br><span class="line">    &quot;runtime&quot;</span><br><span class="line">    &quot;sync&quot;</span><br><span class="line">)</span><br><span class="line">var (</span><br><span class="line">    cpunum &#x3D; runtime.NumCPU()-1</span><br><span class="line">)</span><br><span class="line">func main()&#123;</span><br><span class="line">    ch :&#x3D; make(chan string)</span><br><span class="line">    runtime.GOMAXPROCS(cpunum)</span><br><span class="line">    wg :&#x3D; sync.WaitGroup&#123;&#125;</span><br><span class="line"></span><br><span class="line">    for i :&#x3D; 0; i &lt; cpunum; i++&#123;</span><br><span class="line">        go WgReadLogs(ch, &amp;wg)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    wg.Add(2)</span><br><span class="line">    ch &lt;- &quot;.&#x2F;health&#x2F;stat1.rec&quot;</span><br><span class="line">    ch &lt;- &quot;.&#x2F;report&#x2F;stat2.rec&quot;</span><br><span class="line">    wg.Wait()</span><br><span class="line">    close(ch)</span><br><span class="line">&#125;</span><br><span class="line">func WgReadLogs(ch chan string,wg *sync.WaitGroup)&#123;</span><br><span class="line">    for true&#123;</span><br><span class="line">tmp,ok :&#x3D; &lt;-ch</span><br><span class="line">if !ok&#123;</span><br><span class="line">    break</span><br><span class="line">&#125;</span><br><span class="line">ReadLogs(tmp)</span><br><span class="line">wg.Done()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">func ReadLogs(logname string)&#123;</span><br><span class="line">    fmt.Println(logname)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import (</span><br><span class="line">    &quot;runtime&quot;</span><br><span class="line">    &quot;sync&quot;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>必要的库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var (</span><br><span class="line">    cpunum &#x3D; runtime.NumCPU()-1</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>要使用的cpu数量，建议不全使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ch :&#x3D; make(chan string)</span><br><span class="line">runtime.GOMAXPROCS(cpunum)</span><br><span class="line">wg :&#x3D; sync.WaitGroup&#123;&#125;</span><br></pre></td></tr></table></figure><p>建立管道。<br>声明使用的cpu数。<br>建立互斥关系，本例中主要为了实现所有线程执行完后再执行后续程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for i :&#x3D; 0; i &lt; cpunum; i++&#123;</span><br><span class="line">    go WgReadLogs(ch, &amp;wg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建cpu数减1个线程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wg.Add(2)</span><br><span class="line">ch &lt;- &quot;.&#x2F;health&#x2F;stat1.rec&quot;</span><br><span class="line">ch &lt;- &quot;.&#x2F;report&#x2F;stat2.rec&quot;</span><br><span class="line">wg.Wait()</span><br><span class="line">close(ch)</span><br></pre></td></tr></table></figure><p>后面每个任务结束时要done一个wg，这里根据具体情况加，是循环就在每个循环里加，保证后面能全部done即可。<br>没有缓冲的、阻塞式的往管道传递字符串。<br>Wait是等所有线程都执行完，即增加的数字被全done掉。<br>关闭管道。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">func WgReadLogs(ch chan string,wg *sync.WaitGroup)&#123;</span><br><span class="line">    for true&#123;</span><br><span class="line">        tmp,ok :&#x3D; &lt;-ch</span><br><span class="line">        if !ok&#123;</span><br><span class="line">            break</span><br><span class="line">        &#125;</span><br><span class="line">        ReadLogs(tmp)</span><br><span class="line">        wg.Done()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设已有的函数是ReadLogs，在它的基础上加个Wg加函数名的新函数，我觉得这种方式不改变原有的，比较舒服。<br>大意是：循环从管道读取字符串，读不到了就跳出循环。<br>每个ReadLogs()之后加一个wg.Done()，相当于计数减一。</p><p>ReadLogs()就是要执行的任务，不再解释。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>就是开指定个线程。<br>管道阻塞传值。<br>wg同步。<br>WgReadLogs循环接收。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h3&gt;&lt;p&gt;实现指定个核心最大化使用，比如核心总数减一。&lt;/p&gt;&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;runtime&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;sync&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cpunum &amp;#x3D; runtime.NumCPU()-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ch :&amp;#x3D; make(chan string)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    runtime.GOMAXPROCS(cpunum)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg :&amp;#x3D; sync.WaitGroup&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for i :&amp;#x3D; 0; i &amp;lt; cpunum; i++&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        go WgReadLogs(ch, &amp;amp;wg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg.Add(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ch &amp;lt;- &amp;quot;.&amp;#x2F;health&amp;#x2F;stat1.rec&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ch &amp;lt;- &amp;quot;.&amp;#x2F;report&amp;#x2F;stat2.rec&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg.Wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    close(ch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func WgReadLogs(ch chan string,wg *sync.WaitGroup)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for true&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tmp,ok :&amp;#x3D; &amp;lt;-ch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if !ok&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ReadLogs(tmp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func ReadLogs(logname string)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(logname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="总结" scheme="http://weehaa.top/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="golang" scheme="http://weehaa.top/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>linux下python复制内容到粘贴板</title>
    <link href="http://weehaa.top/2021/01/13/linux%E4%B8%8Bpython%E5%A4%8D%E5%88%B6%E5%86%85%E5%AE%B9%E5%88%B0%E7%B2%98%E8%B4%B4%E6%9D%BF/"/>
    <id>http://weehaa.top/2021/01/13/linux下python复制内容到粘贴板/</id>
    <published>2021-01-13T08:52:19.000Z</published>
    <updated>2021-01-13T08:55:41.671Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装pyperclip库"><a href="#安装pyperclip库" class="headerlink" title="安装pyperclip库"></a>安装pyperclip库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pyperclip</span><br></pre></td></tr></table></figure><h3 id="安装xclip"><a href="#安装xclip" class="headerlink" title="安装xclip"></a>安装xclip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xclip</span><br></pre></td></tr></table></figure><h3 id="和粘贴板交互"><a href="#和粘贴板交互" class="headerlink" title="和粘贴板交互"></a>和粘贴板交互</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import pyperclip</span><br><span class="line"># 复制到粘贴板</span><br><span class="line">pyperclip.copy(&#39;test&#39;)</span><br><span class="line"># 从粘贴板复制</span><br><span class="line">pyperclip.paste()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装pyperclip库&quot;&gt;&lt;a href=&quot;#安装pyperclip库&quot; class=&quot;headerlink&quot; title=&quot;安装pyperclip库&quot;&gt;&lt;/a&gt;安装pyperclip库&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="linux" scheme="http://weehaa.top/tags/linux/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu重复输密码进不了系统解决方法</title>
    <link href="http://weehaa.top/2021/01/11/ubuntu%E9%87%8D%E5%A4%8D%E8%BE%93%E5%AF%86%E7%A0%81%E8%BF%9B%E4%B8%8D%E4%BA%86%E7%B3%BB%E7%BB%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://weehaa.top/2021/01/11/ubuntu重复输密码进不了系统解决方法/</id>
    <published>2021-01-11T09:33:57.000Z</published>
    <updated>2021-01-11T09:39:39.105Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>今天在使用xstart时导致，xUbuntu重启后循环跳出输密码界面，无法进入桌面。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>ctrl + alt + F1进入终端<br>删除用户主目录下的.Xauthority</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>每次用户登录的时候都要读取对应.Xauthority的信息，<br>我之前的操作导致其权限发生变化，这点在删除时就可以看到。<br>删除后重启正常进入桌面。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;今天在使用xstart时导致，xUbuntu重启后循环跳出输密码界面，无法进入桌面。&lt;/p&gt;
&lt;h3 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="ubuntu" scheme="http://weehaa.top/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>点对点&amp;心跳机制</title>
    <link href="http://weehaa.top/2021/01/08/%E7%82%B9%E5%AF%B9%E7%82%B9-%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6/"/>
    <id>http://weehaa.top/2021/01/08/点对点-心跳机制/</id>
    <published>2021-01-08T03:04:21.000Z</published>
    <updated>2021-01-08T03:09:06.018Z</updated>
    
    <content type="html"><![CDATA[<h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p>相对于点对点传输，心跳机制是一种更好实现的近似替代。</p><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><p>心跳机制，优点是稳定好实现，缺点是没点对点快，对带宽对服务器性能都有要求。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以后的开发中，心跳可以作为基础，快速实现。点对点作为升级功能，但使用时优先级更高的功能。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;对比&quot;&gt;&lt;a href=&quot;#对比&quot; class=&quot;headerlink&quot; title=&quot;对比&quot;&gt;&lt;/a&gt;对比&lt;/h3&gt;&lt;p&gt;相对于点对点传输，心跳机制是一种更好实现的近似替代。&lt;/p&gt;
&lt;h3 id=&quot;优缺点&quot;&gt;&lt;a href=&quot;#优缺点&quot; class=&quot;head
      
    
    </summary>
    
    
    
      <category term="思考" scheme="http://weehaa.top/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu查看显卡具体型号</title>
    <link href="http://weehaa.top/2021/01/07/Ubuntu%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E5%85%B7%E4%BD%93%E5%9E%8B%E5%8F%B7/"/>
    <id>http://weehaa.top/2021/01/07/Ubuntu查看显卡具体型号/</id>
    <published>2021-01-07T07:37:57.000Z</published>
    <updated>2021-01-07T07:39:22.194Z</updated>
    
    <content type="html"><![CDATA[<h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@h2-B85M-D2V-SI:~# nvidia-smi -q | grep Product</span><br><span class="line">    Product Name                    : GeForce RTX 2070 SUPER</span><br><span class="line">    Product Brand                   : GeForce</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;指令&quot;&gt;&lt;a href=&quot;#指令&quot; class=&quot;headerlink&quot; title=&quot;指令&quot;&gt;&lt;/a&gt;指令&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="ubuntu" scheme="http://weehaa.top/tags/ubuntu/"/>
    
      <category term="linux" scheme="http://weehaa.top/tags/linux/"/>
    
      <category term="nvidia" scheme="http://weehaa.top/tags/nvidia/"/>
    
  </entry>
  
  <entry>
    <title>解决cuda、cudnn下载慢问题</title>
    <link href="http://weehaa.top/2021/01/05/%E8%A7%A3%E5%86%B3cuda%E3%80%81cudnn%E4%B8%8B%E8%BD%BD%E6%85%A2%E9%97%AE%E9%A2%98/"/>
    <id>http://weehaa.top/2021/01/05/解决cuda、cudnn下载慢问题/</id>
    <published>2021-01-05T08:00:48.000Z</published>
    <updated>2021-01-05T08:04:17.266Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云有对应的下载镜像地址：<br><a href="https://mirrors.aliyun.com/nvidia-cuda/ubuntu2004/x86_64/" target="_blank" rel="noopener">https://mirrors.aliyun.com/nvidia-cuda/ubuntu2004/x86_64/</a></p><p>更多内容可以在这里找：<br><a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener">https://developer.aliyun.com/mirror/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;阿里云有对应的下载镜像地址：&lt;br&gt;&lt;a href=&quot;https://mirrors.aliyun.com/nvidia-cuda/ubuntu2004/x86_64/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mirrors.aliy
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="cuda" scheme="http://weehaa.top/tags/cuda/"/>
    
  </entry>
  
  <entry>
    <title>linux创建热点及相关程序功能介绍</title>
    <link href="http://weehaa.top/2020/12/30/linux%E5%88%9B%E5%BB%BA%E7%83%AD%E7%82%B9%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%A8%8B%E5%BA%8F%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/"/>
    <id>http://weehaa.top/2020/12/30/linux创建热点及相关程序功能介绍/</id>
    <published>2020-12-30T09:50:49.000Z</published>
    <updated>2020-12-31T01:11:19.105Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我的150Mbs的RT3070l无线网卡，通过create_ap创建的热点下载速度在500-700k，而且首次打开网页很慢。<br>今天集中解决一下这个问题。<br>create_ap仓库已经停止维护，在其页面上推荐了一个图形界面的分支。<br>名字叫<a href="https://github.com/lakinduakash/linux-wifi-hotspot" target="_blank" rel="noopener">linux-wifi-hotspot</a>。<br>也可以叫 WiFi hotspot(linux搜索里显示的)，<br>也可以叫 wihotspot (终端启动的指令)。<br>下载、安装后，网络上也没找到详细的介绍。<br>下面介绍下界面各个功能的含义，及对应效果。</p><a id="more"></a><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p><img src="/2020/12/30/linux%E5%88%9B%E5%BB%BA%E7%83%AD%E7%82%B9%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%A8%8B%E5%BA%8F%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D/2020-12-30_17-49.png" alt="2020-12-30\_17-49.png"></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>SSID 热点的名字<br>Password 密码<br>Open 选中则不使用密码<br>WiFi interfaces 建立热点的无线网卡<br>Internet interfaces 机器上联网的网卡<br>Frequency band 根据无线网卡功能选，5G快距离近<br>Hidden 隐藏网络<br>Use psk 加密的一个选项，可不勾<br>Set mac 只有设置的mac才能连接<br>No virt 不使用虚拟化接口功能，经过测试，不选网速更快<br>Channel 取值范围在1-11，我的只有在7及以下才可使用，越大网速越快<br>Mac Filter 添加mac的设备无法连接<br>80211n 80211ac ac比n更快，支持ac就选ac</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>下载局域网网盘文件：<br>在安卓iqoo z1下可以达到4.2M/s<br>在iPhone12下可以3.6M/s</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我的150Mbs的RT3070l无线网卡，通过create_ap创建的热点下载速度在500-700k，而且首次打开网页很慢。&lt;br&gt;今天集中解决一下这个问题。&lt;br&gt;create_ap仓库已经停止维护，在其页面上推荐了一个图形界面的分支。&lt;br&gt;名字叫&lt;a href=&quot;https://github.com/lakinduakash/linux-wifi-hotspot&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux-wifi-hotspot&lt;/a&gt;。&lt;br&gt;也可以叫 WiFi hotspot(linux搜索里显示的)，&lt;br&gt;也可以叫 wihotspot (终端启动的指令)。&lt;br&gt;下载、安装后，网络上也没找到详细的介绍。&lt;br&gt;下面介绍下界面各个功能的含义，及对应效果。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="ubuntu" scheme="http://weehaa.top/tags/ubuntu/"/>
    
      <category term="linux" scheme="http://weehaa.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>which和whereis的区别</title>
    <link href="http://weehaa.top/2020/12/30/which%E5%92%8Cwhereis%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://weehaa.top/2020/12/30/which和whereis的区别/</id>
    <published>2020-12-30T03:48:31.000Z</published>
    <updated>2020-12-30T03:51:40.386Z</updated>
    
    <content type="html"><![CDATA[<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">h@h-B360M-D2VX-SI:~$ cxfix</span><br><span class="line">bash: cxfix: command not found</span><br><span class="line">h@h-B360M-D2VX-SI:~$ which cxfix</span><br><span class="line">h@h-B360M-D2VX-SI:~$ whereis cxfix</span><br><span class="line">cxfix: &#x2F;opt&#x2F;cxoffice&#x2F;bin&#x2F;cxfix</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>都是查找可执行文件，简单说，whereis查询更广，which查询默认的几个位置。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;h@h-B360M-D2VX-SI:~$ cxfix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bash: cxfix: command not found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h@h-B360M-D2VX-SI:~$ which cxfix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h@h-B360M-D2VX-SI:~$ whereis cxfix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cxfix: &amp;#x2F;opt&amp;#x2F;cxoffice&amp;#x2F;bin&amp;#x2F;cxfix&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="总结" scheme="http://weehaa.top/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="linux" scheme="http://weehaa.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>golang增减时间</title>
    <link href="http://weehaa.top/2020/12/28/golang%E5%A2%9E%E5%87%8F%E6%97%B6%E9%97%B4/"/>
    <id>http://weehaa.top/2020/12/28/golang增减时间/</id>
    <published>2020-12-28T07:53:49.000Z</published>
    <updated>2020-12-28T07:58:26.342Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;time&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">start :&#x3D; time.Date(2009, 1, 1, 0, 0, 0, 0, time.UTC)</span><br><span class="line">oneDayLater :&#x3D; start.AddDate(0, 0, 1)</span><br><span class="line">oneMonthLater :&#x3D; start.AddDate(0, 1, 0)</span><br><span class="line">oneYearLater :&#x3D; start.AddDate(1, 0, 0)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>AddDate里的参数可以为负。</p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;quot;time&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	start :&amp;#x3D; time.Date(2009, 1, 1, 0, 0, 0, 0, time.UTC)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	oneDayLater :&amp;#x3D; start.AddDate(0, 0, 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	oneMonthLater :&amp;#x3D; start.AddDate(0, 1, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	oneYearLater :&amp;#x3D; start.AddDate(1, 0, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="记录" scheme="http://weehaa.top/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="golang" scheme="http://weehaa.top/tags/golang/"/>
    
  </entry>
  
</feed>
