<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你说你要一场革命</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://inspiring26.github.io/"/>
  <updated>2020-11-19T09:14:49.633Z</updated>
  <id>https://inspiring26.github.io/</id>
  
  <author>
    <name>huang yong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>查看当前使用的是哪个shell</title>
    <link href="https://inspiring26.github.io/2020/11/19/%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E5%93%AA%E4%B8%AAshell/"/>
    <id>https://inspiring26.github.io/2020/11/19/查看当前使用的是哪个shell/</id>
    <published>2020-11-19T09:08:34.000Z</published>
    <updated>2020-11-19T09:14:49.633Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看是bash还是zsh等"><a href="#查看是bash还是zsh等" class="headerlink" title="查看是bash还是zsh等"></a>查看是bash还是zsh等</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看是bash还是zsh等&quot;&gt;&lt;a href=&quot;#查看是bash还是zsh等&quot; class=&quot;headerlink&quot; title=&quot;查看是bash还是zsh等&quot;&gt;&lt;/a&gt;查看是bash还是zsh等&lt;/h3&gt;&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="linux" scheme="https://inspiring26.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux卸载oh_my_zsh</title>
    <link href="https://inspiring26.github.io/2020/11/19/linux%E5%8D%B8%E8%BD%BDoh-my-zsh/"/>
    <id>https://inspiring26.github.io/2020/11/19/linux卸载oh-my-zsh/</id>
    <published>2020-11-19T06:33:16.000Z</published>
    <updated>2020-11-19T06:34:56.633Z</updated>
    
    <content type="html"><![CDATA[<h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ uninstall_oh_my_zsh</span><br><span class="line">Are you sure you want to remove Oh My Zsh? [y&#x2F;N] y</span><br><span class="line">Removing ~&#x2F;.oh-my-zsh</span><br><span class="line">Looking for original zsh config...</span><br><span class="line">Switching your shell back to &#39;&#x2F;bin&#x2F;bash&#39;:</span><br><span class="line">Password: </span><br><span class="line">Thanks for trying out Oh My Zsh. It&#39;s been uninstalled.</span><br><span class="line">Don&#39;t forget to restart your terminal!</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="切换or-not"><a href="#切换or-not" class="headerlink" title="切换or not"></a>切换or not</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chsh -s &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;卸载&quot;&gt;&lt;a href=&quot;#卸载&quot; class=&quot;headerlink&quot; title=&quot;卸载&quot;&gt;&lt;/a&gt;卸载&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  ~ uninstall_oh_my_zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Are you sure you want to remove Oh My Zsh? [y&amp;#x2F;N] y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Removing ~&amp;#x2F;.oh-my-zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Looking for original zsh config...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Switching your shell back to &amp;#39;&amp;#x2F;bin&amp;#x2F;bash&amp;#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Password: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Thanks for trying out Oh My Zsh. It&amp;#39;s been uninstalled.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Don&amp;#39;t forget to restart your terminal!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="linux" scheme="https://inspiring26.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>大概是最简单的生成日期列表及获得今天日期代码</title>
    <link href="https://inspiring26.github.io/2020/10/28/%E5%A4%A7%E6%A6%82%E6%98%AF%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%94%9F%E6%88%90%E6%97%A5%E6%9C%9F%E5%88%97%E8%A1%A8%E5%8F%8A%E8%8E%B7%E5%BE%97%E4%BB%8A%E5%A4%A9%E6%97%A5%E6%9C%9F%E4%BB%A3%E7%A0%81/"/>
    <id>https://inspiring26.github.io/2020/10/28/大概是最简单的生成日期列表及获得今天日期代码/</id>
    <published>2020-10-28T06:20:05.000Z</published>
    <updated>2020-10-28T06:25:17.667Z</updated>
    
    <content type="html"><![CDATA[<h3 id="生成日期列表"><a href="#生成日期列表" class="headerlink" title="生成日期列表"></a>生成日期列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># closed根据需要，可加可不加。</span><br><span class="line">[_.strftime(&quot;%Y%m%d&quot;) for _ in pd.date_range(start&#x3D;&#39;2020-09-02&#39;, end&#x3D;&#39;2020-10-28&#39;, closed&#x3D;&#39;left&#39;)]</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="获取今天日期"><a href="#获取今天日期" class="headerlink" title="获取今天日期"></a>获取今天日期</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from datetime import date</span><br><span class="line">&gt;&gt;&gt; date.today().strftime(&quot;%Y%m%d&quot;)</span><br><span class="line">&#39;20201028&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;生成日期列表&quot;&gt;&lt;a href=&quot;#生成日期列表&quot; class=&quot;headerlink&quot; title=&quot;生成日期列表&quot;&gt;&lt;/a&gt;生成日期列表&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# closed根据需要，可加可不加。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[_.strftime(&amp;quot;%Y%m%d&amp;quot;) for _ in pd.date_range(start&amp;#x3D;&amp;#39;2020-09-02&amp;#39;, end&amp;#x3D;&amp;#39;2020-10-28&amp;#39;, closed&amp;#x3D;&amp;#39;left&amp;#39;)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pytorch将张量加载到gpu显存时，cpu内存会增加2G左右</title>
    <link href="https://inspiring26.github.io/2020/09/27/pytorch%E5%B0%86%E5%BC%A0%E9%87%8F%E5%8A%A0%E8%BD%BD%E5%88%B0gpu%E6%98%BE%E5%AD%98%E6%97%B6%EF%BC%8Ccpu%E5%86%85%E5%AD%98%E4%BC%9A%E5%A2%9E%E5%8A%A02G%E5%B7%A6%E5%8F%B3/"/>
    <id>https://inspiring26.github.io/2020/09/27/pytorch将张量加载到gpu显存时，cpu内存会增加2G左右/</id>
    <published>2020-09-27T10:19:41.000Z</published>
    <updated>2020-09-27T10:23:57.651Z</updated>
    
    <content type="html"><![CDATA[<p>第一次将张量等转移到gpu时，cpu内存会增加2G，这是正常现象，是cuda和pytorch初始化共同导致的。<br>同一个程序只有第一次操作时会增加。<br>更多信息参考pytorch的issues<br><a href="https://github.com/pytorch/pytorch/issues/12873" target="_blank" rel="noopener">地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第一次将张量等转移到gpu时，cpu内存会增加2G，这是正常现象，是cuda和pytorch初始化共同导致的。&lt;br&gt;同一个程序只有第一次操作时会增加。&lt;br&gt;更多信息参考pytorch的issues&lt;br&gt;&lt;a href=&quot;https://github.com/pytor
      
    
    </summary>
    
    
    
      <category term="pytorch" scheme="https://inspiring26.github.io/tags/pytorch/"/>
    
      <category term="分析" scheme="https://inspiring26.github.io/tags/%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>pytorch损失函数会导致显存不断增长的问题</title>
    <link href="https://inspiring26.github.io/2020/09/27/pytorch%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E4%BC%9A%E5%AF%BC%E8%87%B4%E6%98%BE%E5%AD%98%E4%B8%8D%E6%96%AD%E5%A2%9E%E9%95%BF%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://inspiring26.github.io/2020/09/27/pytorch损失函数会导致显存不断增长的问题/</id>
    <published>2020-09-27T07:40:01.000Z</published>
    <updated>2020-09-27T10:11:59.939Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>如果已经把模型和变量放到显存中了，每个epoch计算的损失值也是在显存中的，即.cuda()的类型。<br>如果我们计算总损失的变量是.cpu()类型的，每次迭代的时候计算到的的.cuda()格式变量是不会释放的，从而会导致显存不断增加。</p><a id="more"></a><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>1.转换为.cpu()再累加<br>实际代码并不难使用.cpu(),而是.item()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">loss &#x3D; criterion(labels,outputs).item()</span><br><span class="line">totalloss+&#x3D;loss</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">loss &#x3D; criterion(labels,outputs)</span><br><span class="line">totalloss+&#x3D;loss.item()</span><br></pre></td></tr></table></figure><br>如果使用.cpu(),只是在内存中生成了一份，显存中的并未释放。<br>2.声明.cuda()变量</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;p&gt;如果已经把模型和变量放到显存中了，每个epoch计算的损失值也是在显存中的，即.cuda()的类型。&lt;br&gt;如果我们计算总损失的变量是.cpu()类型的，每次迭代的时候计算到的的.cuda()格式变量是不会释放的，从而会导致显存不断增加。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="pytorch" scheme="https://inspiring26.github.io/tags/pytorch/"/>
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pandas</title>
    <link href="https://inspiring26.github.io/2020/09/23/pandas/"/>
    <id>https://inspiring26.github.io/2020/09/23/pandas/</id>
    <published>2020-09-23T09:06:46.000Z</published>
    <updated>2020-09-23T09:12:24.736Z</updated>
    
    <content type="html"><![CDATA[<p>在做这个推荐系统的过程中，能用新方法的绝不用老方法，处理excel技术大大提升了。<br>如果是现在给皮皮处理excel，一定溜的飞起。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在做这个推荐系统的过程中，能用新方法的绝不用老方法，处理excel技术大大提升了。&lt;br&gt;如果是现在给皮皮处理excel，一定溜的飞起。。。&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python装饰器</title>
    <link href="https://inspiring26.github.io/2020/09/23/python%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
    <id>https://inspiring26.github.io/2020/09/23/python装饰器/</id>
    <published>2020-09-23T08:54:52.000Z</published>
    <updated>2020-09-23T09:04:34.904Z</updated>
    
    <content type="html"><![CDATA[<p>装饰器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">def foo():  </span><br><span class="line">    print &#39;in foo()&#39;  </span><br><span class="line">   </span><br><span class="line"># 定义一个计时器，传入一个，并返回另一个附加了计时功能的方法  </span><br><span class="line">def timeit(func):  </span><br><span class="line">       </span><br><span class="line">    # 定义一个内嵌的包装函数，给传入的函数加上计时功能的包装  </span><br><span class="line">    def wrapper():  </span><br><span class="line">        start &#x3D; time.clock()  </span><br><span class="line">        func()  </span><br><span class="line">        end &#x3D;time.clock()  </span><br><span class="line">        print &#39;Time Elapsed:&#39;, end - start  </span><br><span class="line">       </span><br><span class="line">    # 将包装后的函数返回  </span><br><span class="line">    return wrapper</span><br></pre></td></tr></table></figure><br>的实际使用是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foo &#x3D; timeit(foo)</span><br></pre></td></tr></table></figure><br>简写为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@timeit</span><br><span class="line">def foo()</span><br></pre></td></tr></table></figure><br>很好理解：新foo等于<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def wrapper():  </span><br><span class="line">    start &#x3D; time.clock()  </span><br><span class="line">    foo() # 原foo()函数  </span><br><span class="line">    end &#x3D;time.clock()  </span><br><span class="line">    print &#39;Time Elapsed:&#39;, end - start</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>就是经过装饰器，把原函数传到新函数了。在新函数中又定义了一个嵌套函数，其实最终返回的结果就是这个嵌套函数。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;装饰器&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def foo():  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print &amp;#39;in foo()&amp;#39;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 定义一个计时器，传入一个，并返回另一个附加了计时功能的方法  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def timeit(func):  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 定义一个内嵌的包装函数，给传入的函数加上计时功能的包装  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def wrapper():  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start &amp;#x3D; time.clock()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        func()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        end &amp;#x3D;time.clock()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print &amp;#39;Time Elapsed:&amp;#39;, end - start  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 将包装后的函数返回  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return wrapper&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;的实际使用是&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;foo &amp;#x3D; timeit(foo)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;简写为&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@timeit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def foo()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;很好理解：新foo等于&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def wrapper():  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start &amp;#x3D; time.clock()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo() # 原foo()函数  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    end &amp;#x3D;time.clock()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print &amp;#39;Time Elapsed:&amp;#39;, end - start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="总结" scheme="https://inspiring26.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python多进程</title>
    <link href="https://inspiring26.github.io/2020/09/23/python%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    <id>https://inspiring26.github.io/2020/09/23/python多进程/</id>
    <published>2020-09-23T08:45:43.000Z</published>
    <updated>2020-09-23T09:17:10.078Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简单粗暴的方法"><a href="#简单粗暴的方法" class="headerlink" title="简单粗暴的方法"></a>简单粗暴的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">f1 &#x3D; Process(target&#x3D;func1,args&#x3D;(q1res,))</span><br><span class="line">f2 &#x3D; Process(target&#x3D;func2,args&#x3D;(q2res,))</span><br><span class="line"></span><br><span class="line">f1.start()</span><br><span class="line">f2.start()</span><br><span class="line">f1.join()</span><br><span class="line">f2.join()</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="简单处理多进程"><a href="#简单处理多进程" class="headerlink" title="简单处理多进程"></a>简单处理多进程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ps&#x3D;[]</span><br><span class="line">for i in [fanca, funcb]</span><br><span class="line">    p&#x3D;Process(target&#x3D;i)</span><br><span class="line">    ps.append(p)</span><br><span class="line"></span><br><span class="line">for i in range(2):</span><br><span class="line">    ps[i].start()</span><br><span class="line"></span><br><span class="line">for i in range(2):</span><br><span class="line">    ps[i].join()</span><br></pre></td></tr></table></figure><h3 id="使用进程池处理多进程"><a href="#使用进程池处理多进程" class="headerlink" title="使用进程池处理多进程"></a>使用进程池处理多进程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ps &#x3D; Pool(3)</span><br><span class="line">for p in [write_showDF, write_clickDF, write_textLinks]:</span><br><span class="line">    ps.apply(p)</span><br><span class="line">ps.close()</span><br><span class="line">ps.join()</span><br></pre></td></tr></table></figure><h3 id="进程间通信"><a href="#进程间通信" class="headerlink" title="进程间通信"></a>进程间通信</h3><p>以第一种形式，且子进程间无交互为例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">q1res &#x3D; mp.Queue()</span><br><span class="line">q2res &#x3D; mp.Queue()</span><br><span class="line">f1 &#x3D; Process(target&#x3D;func1,args&#x3D;(q1res,))</span><br><span class="line">f2 &#x3D; Process(target&#x3D;func2,args&#x3D;(q2res,))</span><br><span class="line"></span><br><span class="line">f1.start()</span><br><span class="line">f2.start()</span><br><span class="line">f1.join()</span><br><span class="line">f2.join()</span><br><span class="line">rec_cec_df,norm_cec_df&#x3D;q1res.get(),q2res.get()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简单粗暴的方法&quot;&gt;&lt;a href=&quot;#简单粗暴的方法&quot; class=&quot;headerlink&quot; title=&quot;简单粗暴的方法&quot;&gt;&lt;/a&gt;简单粗暴的方法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;f1 &amp;#x3D; Process(target&amp;#x3D;func1,args&amp;#x3D;(q1res,))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2 &amp;#x3D; Process(target&amp;#x3D;func2,args&amp;#x3D;(q2res,))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2.join()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="总结" scheme="https://inspiring26.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python官方命名规范简单总结</title>
    <link href="https://inspiring26.github.io/2020/09/15/python%E5%AE%98%E6%96%B9%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/"/>
    <id>https://inspiring26.github.io/2020/09/15/python官方命名规范简单总结/</id>
    <published>2020-09-15T05:41:30.000Z</published>
    <updated>2020-09-15T10:41:43.852Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-不加分号"><a href="#1-不加分号" class="headerlink" title="1.不加分号"></a>1.不加分号</h3><h3 id="2-每行不超过80个字符"><a href="#2-每行不超过80个字符" class="headerlink" title="2.每行不超过80个字符"></a>2.每行不超过80个字符</h3><p>所有语句都是可以换行的<br>圆括号、中括号、花括号中的行是隐式连接起来的</p><h3 id="3-顶级定义之间空两行，方法之间空一行"><a href="#3-顶级定义之间空两行，方法之间空一行" class="headerlink" title="3.顶级定义之间空两行，方法之间空一行"></a>3.顶级定义之间空两行，方法之间空一行</h3><h3 id="4-每个导入单独占一行"><a href="#4-每个导入单独占一行" class="headerlink" title="4.每个导入单独占一行"></a>4.每个导入单独占一行</h3><h3 id="5-命名"><a href="#5-命名" class="headerlink" title="5.命名"></a>5.命名</h3><p>(1)除计数器、迭代器不使用单字符<br>(2)不使用-<br>(3)通常不使用__开头或结尾<br>(4)类名使用大驼峰<br>(5)模块名(函数名)使用小写加下划线<br>(6)变量名和函数名一样，小写加下划线</p><a id="more"></a><h3 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h3><p><a href="https://python-guide.gitbooks.io/python-style-guide/content/style-guide/variables.html" target="_blank" rel="noopener">python-style-guide</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-不加分号&quot;&gt;&lt;a href=&quot;#1-不加分号&quot; class=&quot;headerlink&quot; title=&quot;1.不加分号&quot;&gt;&lt;/a&gt;1.不加分号&lt;/h3&gt;&lt;h3 id=&quot;2-每行不超过80个字符&quot;&gt;&lt;a href=&quot;#2-每行不超过80个字符&quot; class=&quot;headerlink&quot; title=&quot;2.每行不超过80个字符&quot;&gt;&lt;/a&gt;2.每行不超过80个字符&lt;/h3&gt;&lt;p&gt;所有语句都是可以换行的&lt;br&gt;圆括号、中括号、花括号中的行是隐式连接起来的&lt;/p&gt;&lt;h3 id=&quot;3-顶级定义之间空两行，方法之间空一行&quot;&gt;&lt;a href=&quot;#3-顶级定义之间空两行，方法之间空一行&quot; class=&quot;headerlink&quot; title=&quot;3.顶级定义之间空两行，方法之间空一行&quot;&gt;&lt;/a&gt;3.顶级定义之间空两行，方法之间空一行&lt;/h3&gt;&lt;h3 id=&quot;4-每个导入单独占一行&quot;&gt;&lt;a href=&quot;#4-每个导入单独占一行&quot; class=&quot;headerlink&quot; title=&quot;4.每个导入单独占一行&quot;&gt;&lt;/a&gt;4.每个导入单独占一行&lt;/h3&gt;&lt;h3 id=&quot;5-命名&quot;&gt;&lt;a href=&quot;#5-命名&quot; class=&quot;headerlink&quot; title=&quot;5.命名&quot;&gt;&lt;/a&gt;5.命名&lt;/h3&gt;&lt;p&gt;(1)除计数器、迭代器不使用单字符&lt;br&gt;(2)不使用-&lt;br&gt;(3)通常不使用__开头或结尾&lt;br&gt;(4)类名使用大驼峰&lt;br&gt;(5)模块名(函数名)使用小写加下划线&lt;br&gt;(6)变量名和函数名一样，小写加下划线&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="总结" scheme="https://inspiring26.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>不要温和地走进那个良夜</title>
    <link href="https://inspiring26.github.io/2020/09/03/%E4%B8%8D%E8%A6%81%E6%B8%A9%E5%92%8C%E5%9C%B0%E8%B5%B0%E8%BF%9B%E9%82%A3%E4%B8%AA%E8%89%AF%E5%A4%9C/"/>
    <id>https://inspiring26.github.io/2020/09/03/不要温和地走进那个良夜/</id>
    <published>2020-09-03T07:28:41.000Z</published>
    <updated>2020-09-04T03:00:57.190Z</updated>
    
    <content type="html"><![CDATA[<p>不要温和地走进那个良夜，<br>白昼将尽，暮年仍应燃烧咆哮，<br>怒斥吧，怒斥，怒斥那光的消逝。<br>虽在白昼尽头，智者自知该踏上征途</p><hr><p>不要温和地走进那个良夜<br>不要静候命运的安排</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不要温和地走进那个良夜，&lt;br&gt;白昼将尽，暮年仍应燃烧咆哮，&lt;br&gt;怒斥吧，怒斥，怒斥那光的消逝。&lt;br&gt;虽在白昼尽头，智者自知该踏上征途&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;不要温和地走进那个良夜&lt;br&gt;不要静候命运的安排&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>oh_my_zsh下查看当前是不是root权限</title>
    <link href="https://inspiring26.github.io/2020/09/03/oh-my-zsh%E4%B8%8B%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E6%98%AF%E4%B8%8D%E6%98%AFroot%E6%9D%83%E9%99%90/"/>
    <id>https://inspiring26.github.io/2020/09/03/oh-my-zsh下查看当前是不是root权限/</id>
    <published>2020-09-03T01:43:31.000Z</published>
    <updated>2020-09-03T01:44:21.666Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ whoami</span><br><span class="line">h</span><br><span class="line">➜  ~ sudo su</span><br><span class="line">[sudo] password for h: </span><br><span class="line">h-B360M-D2VX-SI# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="ubuntu" scheme="https://inspiring26.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>jupyter卸载其他核心</title>
    <link href="https://inspiring26.github.io/2020/09/02/jupyter%E5%8D%B8%E8%BD%BD%E5%85%B6%E4%BB%96%E6%A0%B8%E5%BF%83/"/>
    <id>https://inspiring26.github.io/2020/09/02/jupyter卸载其他核心/</id>
    <published>2020-09-02T03:06:11.000Z</published>
    <updated>2020-09-02T03:07:58.807Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ jupyter kernelspec list</span><br><span class="line">Available kernels:</span><br><span class="line">  javascript    &#x2F;home&#x2F;h&#x2F;.local&#x2F;share&#x2F;jupyter&#x2F;kernels&#x2F;javascript</span><br><span class="line">  python3       &#x2F;home&#x2F;h&#x2F;.local&#x2F;share&#x2F;jupyter&#x2F;kernels&#x2F;python3</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ jupyter kernelspec remove javascript</span><br><span class="line">Kernel specs to remove:</span><br><span class="line">  javascript          &#x2F;home&#x2F;h&#x2F;.local&#x2F;share&#x2F;jupyter&#x2F;kernels&#x2F;javascript</span><br><span class="line">Remove 1 kernel specs [y&#x2F;N]: y</span><br><span class="line">[RemoveKernelSpec] Removed &#x2F;home&#x2F;h&#x2F;.local&#x2F;share&#x2F;jupyter&#x2F;kernels&#x2F;javascript</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;查看&quot;&gt;&lt;a href=&quot;#查看&quot; class=&quot;headerlink&quot; title=&quot;查看&quot;&gt;&lt;/a&gt;查看&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  ~ jupyter kernelspec list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Available kernels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  javascript    &amp;#x2F;home&amp;#x2F;h&amp;#x2F;.local&amp;#x2F;share&amp;#x2F;jupyter&amp;#x2F;kernels&amp;#x2F;javascript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  python3       &amp;#x2F;home&amp;#x2F;h&amp;#x2F;.local&amp;#x2F;share&amp;#x2F;jupyter&amp;#x2F;kernels&amp;#x2F;python3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="jupyter" scheme="https://inspiring26.github.io/tags/jupyter/"/>
    
  </entry>
  
  <entry>
    <title>golang、gin小知识点</title>
    <link href="https://inspiring26.github.io/2020/09/01/golang%E3%80%81gin%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://inspiring26.github.io/2020/09/01/golang、gin小知识点/</id>
    <published>2020-09-01T05:43:13.000Z</published>
    <updated>2020-09-01T05:51:43.825Z</updated>
    
    <content type="html"><![CDATA[<h3 id="gin中常见的gin-H"><a href="#gin中常见的gin-H" class="headerlink" title="gin中常见的gin.H"></a>gin中常见的gin.H</h3><p>实际就是map[string]interface{}<br>所以给网页传递变量的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">router.GET(&quot;&#x2F;index&quot;, func(c *gin.Context) &#123;</span><br><span class="line">c.HTML(http.StatusOK, &quot;index.tmpl&quot;, gin.H&#123;</span><br><span class="line">&quot;title&quot;: &quot;Main website&quot;,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>就可以替换为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router.GET(&quot;&#x2F;rec&quot;, func(c *gin.Context) &#123;</span><br><span class="line">c.HTML(http.StatusOK, &quot;index.tmpl&quot;, province_text_dict)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="接着上面讲如何讲interface-转换为具体类型"><a href="#接着上面讲如何讲interface-转换为具体类型" class="headerlink" title="接着上面讲如何讲interface{}转换为具体类型"></a>接着上面讲如何讲interface{}转换为具体类型</h3><p>假设value为interface{}类型<br>value.(type)可查看其类型<br>如果是string类型，<br>value.(string)即可转换类型为string。<br>前提是要准确知道类型。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;gin中常见的gin-H&quot;&gt;&lt;a href=&quot;#gin中常见的gin-H&quot; class=&quot;headerlink&quot; title=&quot;gin中常见的gin.H&quot;&gt;&lt;/a&gt;gin中常见的gin.H&lt;/h3&gt;&lt;p&gt;实际就是map[string]interface{}&lt;br&gt;所以给网页传递变量的&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;router.GET(&amp;quot;&amp;#x2F;index&amp;quot;, func(c *gin.Context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		c.HTML(http.StatusOK, &amp;quot;index.tmpl&amp;quot;, gin.H&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;title&amp;quot;: &amp;quot;Main website&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;就可以替换为&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;router.GET(&amp;quot;&amp;#x2F;rec&amp;quot;, func(c *gin.Context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		c.HTML(http.StatusOK, &amp;quot;index.tmpl&amp;quot;, province_text_dict)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="golang" scheme="https://inspiring26.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>python生成式</title>
    <link href="https://inspiring26.github.io/2020/08/31/python%E7%94%9F%E6%88%90%E5%BC%8F/"/>
    <id>https://inspiring26.github.io/2020/08/31/python生成式/</id>
    <published>2020-08-31T06:21:25.000Z</published>
    <updated>2020-08-31T06:39:04.892Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-并列for循环其实是嵌套for循环"><a href="#1-并列for循环其实是嵌套for循环" class="headerlink" title="1. 并列for循环其实是嵌套for循环"></a>1. 并列for循环其实是嵌套for循环</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; [m + n for m in &#39;ABC&#39; for n in &#39;XYZ&#39;]</span><br><span class="line">[&#39;AX&#39;, &#39;AY&#39;, &#39;AZ&#39;, &#39;BX&#39;, &#39;BY&#39;, &#39;BZ&#39;, &#39;CX&#39;, &#39;CY&#39;, &#39;CZ&#39;]</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-if…else"><a href="#2-if…else" class="headerlink" title="2.if…else"></a>2.if…else</h3><p>if可以在for语句之前，也可以在for语句之后<br>在for语句之后，if是个筛选条件，不能加else。<br>在for语句之前的部分是表达式，形如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 if 2％2&#x3D;&#x3D;0 else 0</span><br></pre></td></tr></table></figure><br>本来就是一个表达式。</p><p>总结：for语句之前是表达式，之后可加判断条件，仅限if，运行顺序是for—>for后判断—>(通过判断才运行表达式)</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-并列for循环其实是嵌套for循环&quot;&gt;&lt;a href=&quot;#1-并列for循环其实是嵌套for循环&quot; class=&quot;headerlink&quot; title=&quot;1. 并列for循环其实是嵌套for循环&quot;&gt;&lt;/a&gt;1. 并列for循环其实是嵌套for循环&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; [m + n for m in &amp;#39;ABC&amp;#39; for n in &amp;#39;XYZ&amp;#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;#39;AX&amp;#39;, &amp;#39;AY&amp;#39;, &amp;#39;AZ&amp;#39;, &amp;#39;BX&amp;#39;, &amp;#39;BY&amp;#39;, &amp;#39;BZ&amp;#39;, &amp;#39;CX&amp;#39;, &amp;#39;CY&amp;#39;, &amp;#39;CZ&amp;#39;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="总结" scheme="https://inspiring26.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python虚拟环境简单使用</title>
    <link href="https://inspiring26.github.io/2020/08/20/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>https://inspiring26.github.io/2020/08/20/python虚拟环境简单使用/</id>
    <published>2020-08-20T02:12:45.000Z</published>
    <updated>2020-08-20T02:31:47.413Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装virtualenv"><a href="#安装virtualenv" class="headerlink" title="安装virtualenv"></a>安装virtualenv</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure><h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv --version</span><br></pre></td></tr></table></figure><p>如果版本大于20，默认不复制系统库</p><h3 id="进入项目文件夹，创建虚拟环境"><a href="#进入项目文件夹，创建虚拟环境" class="headerlink" title="进入项目文件夹，创建虚拟环境"></a>进入项目文件夹，创建虚拟环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv venv</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="进入环境"><a href="#进入环境" class="headerlink" title="进入环境"></a>进入环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source venv&#x2F;bin&#x2F;activate</span><br></pre></td></tr></table></figure><h3 id="完成使用后退出虚拟环境"><a href="#完成使用后退出虚拟环境" class="headerlink" title="完成使用后退出虚拟环境"></a>完成使用后退出虚拟环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><p>老博客地址：<a href="https://www.jianshu.com/u/1c73a3a8ae2d" target="_blank" rel="noopener">https://www.jianshu.com/u/1c73a3a8ae2d</a><br>新博客地址：<a href="https://inspiring26.github.io/">https://inspiring26.github.io/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装virtualenv&quot;&gt;&lt;a href=&quot;#安装virtualenv&quot; class=&quot;headerlink&quot; title=&quot;安装virtualenv&quot;&gt;&lt;/a&gt;安装virtualenv&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3 install virtualenv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&quot;查看版本&quot;&gt;&lt;a href=&quot;#查看版本&quot; class=&quot;headerlink&quot; title=&quot;查看版本&quot;&gt;&lt;/a&gt;查看版本&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;virtualenv --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果版本大于20，默认不复制系统库&lt;/p&gt;&lt;h3 id=&quot;进入项目文件夹，创建虚拟环境&quot;&gt;&lt;a href=&quot;#进入项目文件夹，创建虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;进入项目文件夹，创建虚拟环境&quot;&gt;&lt;/a&gt;进入项目文件夹，创建虚拟环境&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;virtualenv venv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu升级cuda、cudnn</title>
    <link href="https://inspiring26.github.io/2020/07/24/ubuntu%E5%8D%87%E7%BA%A7cuda%E3%80%81cudnn/"/>
    <id>https://inspiring26.github.io/2020/07/24/ubuntu升级cuda、cudnn/</id>
    <published>2020-07-24T03:19:26.000Z</published>
    <updated>2020-07-24T03:43:17.157Z</updated>
    
    <content type="html"><![CDATA[<p>升级python大版本后，需要重新安装多个库，包括pytorch相关的库。</p><h3 id="1-查看已有的cuda"><a href="#1-查看已有的cuda" class="headerlink" title="1.查看已有的cuda"></a>1.查看已有的cuda</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls &#x2F;usr&#x2F;local&#x2F;cuda*</span><br></pre></td></tr></table></figure><p>cuda是带版本号cuda的软链</p><h3 id="2-使用bin目录下自带脚本卸载"><a href="#2-使用bin目录下自带脚本卸载" class="headerlink" title="2.使用bin目录下自带脚本卸载"></a>2.使用bin目录下自带脚本卸载</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin&#x2F;uninstall_*.pl</span><br></pre></td></tr></table></figure><h3 id="3-删除剩余文件"><a href="#3-删除剩余文件" class="headerlink" title="3.删除剩余文件"></a>3.删除剩余文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls &#x2F;usr&#x2F;local&#x2F;cuda*</span><br><span class="line">sudo rm -rf &#x2F;usr&#x2F;local&#x2F;cuda*</span><br></pre></td></tr></table></figure><h3 id="4-下载对应版本cuda、cudnn，注意是对应不是最新"><a href="#4-下载对应版本cuda、cudnn，注意是对应不是最新" class="headerlink" title="4.下载对应版本cuda、cudnn，注意是对应不是最新"></a>4.下载对应版本cuda、cudnn，注意是对应不是最新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># cuda toolkit  下载run文件</span><br><span class="line">https:&#x2F;&#x2F;developer.nvidia.com&#x2F;cuda-toolkit-archive</span><br><span class="line"># cuDNN</span><br><span class="line">https:&#x2F;&#x2F;developer.nvidia.com&#x2F;rdp&#x2F;cudnn-archive</span><br><span class="line"># 同时参考pytorch的版本要求</span><br><span class="line">https:&#x2F;&#x2F;pytorch.org&#x2F;get-started&#x2F;locally&#x2F;</span><br></pre></td></tr></table></figure><h3 id="5-安装cuda"><a href="#5-安装cuda" class="headerlink" title="5.安装cuda"></a>5.安装cuda</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通常除了驱动都安装</span><br><span class="line">sudo sh cuda_*_linux.run</span><br></pre></td></tr></table></figure><h3 id="6-修改环境变量"><a href="#6-修改环境变量" class="headerlink" title="6.修改环境变量"></a>6.修改环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># vim ~&#x2F;.bashrc</span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH&#x3D;$LD_LIBRARY_PATH:&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin</span><br><span class="line">export CUDA_HOME&#x3D;$CUDA_HOME:&#x2F;usr&#x2F;local&#x2F;cuda</span><br></pre></td></tr></table></figure><p>有软链直接修改成cuda就可以了，不用加版本号</p><h3 id="7-升级cudnn"><a href="#7-升级cudnn" class="headerlink" title="7.升级cudnn"></a>7.升级cudnn</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf cudnn*.tgz</span><br><span class="line"></span><br><span class="line">sudo cp include&#x2F;cudnn.h &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;include&#x2F;</span><br><span class="line">sudo cp lib64&#x2F;lib* &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64&#x2F;</span><br><span class="line"># 在新文件夹建立软链</span><br><span class="line">cd  &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64&#x2F;</span><br><span class="line">sudo chmod +r libcudnn.so.7.0.5</span><br><span class="line">sudo ln -sf libcudnn.so.7.0.5 libcudnn.so.7  </span><br><span class="line">sudo ln -sf libcudnn.so.7 libcudnn.so     </span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><h3 id="8-OVER"><a href="#8-OVER" class="headerlink" title="8.OVER"></a>8.OVER</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;升级python大版本后，需要重新安装多个库，包括pytorch相关的库。&lt;/p&gt;&lt;h3 id=&quot;1-查看已有的cuda&quot;&gt;&lt;a href=&quot;#1-查看已有的cuda&quot; class=&quot;headerlink&quot; title=&quot;1.查看已有的cuda&quot;&gt;&lt;/a&gt;1.查看已有的cuda&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls &amp;#x2F;usr&amp;#x2F;local&amp;#x2F;cuda*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;cuda是带版本号cuda的软链&lt;/p&gt;&lt;h3 id=&quot;2-使用bin目录下自带脚本卸载&quot;&gt;&lt;a href=&quot;#2-使用bin目录下自带脚本卸载&quot; class=&quot;headerlink&quot; title=&quot;2.使用bin目录下自带脚本卸载&quot;&gt;&lt;/a&gt;2.使用bin目录下自带脚本卸载&lt;/h3&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="cuda" scheme="https://inspiring26.github.io/tags/cuda/"/>
    
      <category term="ubuntu" scheme="https://inspiring26.github.io/tags/ubuntu/"/>
    
      <category term="cudnn" scheme="https://inspiring26.github.io/tags/cudnn/"/>
    
      <category term="升级" scheme="https://inspiring26.github.io/tags/%E5%8D%87%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu升级python版本详细流程</title>
    <link href="https://inspiring26.github.io/2020/07/23/ubuntu%E5%8D%87%E7%BA%A7python%E7%89%88%E6%9C%AC%E8%AF%A6%E7%BB%86%E6%B5%81%E7%A8%8B/"/>
    <id>https://inspiring26.github.io/2020/07/23/ubuntu升级python版本详细流程/</id>
    <published>2020-07-23T10:26:59.000Z</published>
    <updated>2020-07-24T03:12:19.286Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本方法使用的是apt安装"><a href="#本方法使用的是apt安装" class="headerlink" title="本方法使用的是apt安装"></a>本方法使用的是apt安装</h3><h3 id="1-搜索ppa-找到可用的源"><a href="#1-搜索ppa-找到可用的源" class="headerlink" title="1.搜索ppa,找到可用的源"></a>1.搜索ppa,找到可用的源</h3><h3 id="2-在launchpad-net里搜索python3"><a href="#2-在launchpad-net里搜索python3" class="headerlink" title="2.在launchpad.net里搜索python3"></a>2.在launchpad.net里搜索python3</h3><h3 id="3-建议找到一个叫Jonathon-F的用户，他编译的包比较可靠。可以进入他的主页找到他发布的python的各个版本。"><a href="#3-建议找到一个叫Jonathon-F的用户，他编译的包比较可靠。可以进入他的主页找到他发布的python的各个版本。" class="headerlink" title="3.建议找到一个叫Jonathon F的用户，他编译的包比较可靠。可以进入他的主页找到他发布的python的各个版本。"></a>3.建议找到一个叫Jonathon F的用户，他编译的包比较可靠。可以进入他的主页找到他发布的python的各个版本。</h3><a id="more"></a><h3 id="4-以python3-8为例，打开对应页面"><a href="#4-以python3-8为例，打开对应页面" class="headerlink" title="4.以python3.8为例，打开对应页面"></a>4.以python3.8为例，打开对应页面</h3><h3 id="5-里面有这样的添加ppa的指令"><a href="#5-里面有这样的添加ppa的指令" class="headerlink" title="5.里面有这样的添加ppa的指令"></a>5.里面有这样的添加ppa的指令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:jonathonf&#x2F;python-3.8</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="6-添加、更新完后安装"><a href="#6-添加、更新完后安装" class="headerlink" title="6.添加、更新完后安装"></a>6.添加、更新完后安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3.8</span><br></pre></td></tr></table></figure><h3 id="7-查看目前有的python版本"><a href="#7-查看目前有的python版本" class="headerlink" title="7.查看目前有的python版本"></a>7.查看目前有的python版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ls &#x2F;usr&#x2F;bin&#x2F;pytho*</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python              &#x2F;usr&#x2F;bin&#x2F;python3.6</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python2             &#x2F;usr&#x2F;bin&#x2F;python3.6-config</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python2.7           &#x2F;usr&#x2F;bin&#x2F;python3.6m</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python2.7-config    &#x2F;usr&#x2F;bin&#x2F;python3.6m-config</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python2-config      &#x2F;usr&#x2F;bin&#x2F;python3.8</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python2-jsonschema  &#x2F;usr&#x2F;bin&#x2F;python3-config</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python2-pbr         &#x2F;usr&#x2F;bin&#x2F;python3m</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python2-wsdump      &#x2F;usr&#x2F;bin&#x2F;python3m-config</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;python3             &#x2F;usr&#x2F;bin&#x2F;python-config</span><br></pre></td></tr></table></figure><h3 id="8-删除老版本"><a href="#8-删除老版本" class="headerlink" title="8.删除老版本"></a>8.删除老版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm &#x2F;usr&#x2F;bin&#x2F;python3.6</span><br></pre></td></tr></table></figure><h3 id="9-删除原来的软链接"><a href="#9-删除原来的软链接" class="headerlink" title="9.删除原来的软链接"></a>9.删除原来的软链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm &#x2F;usr&#x2F;bin&#x2F;python3</span><br></pre></td></tr></table></figure><h3 id="10-创建新的软链接"><a href="#10-创建新的软链接" class="headerlink" title="10.创建新的软链接"></a>10.创建新的软链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s &#x2F;usr&#x2F;bin&#x2F;python3.8 &#x2F;usr&#x2F;bin&#x2F;python3</span><br></pre></td></tr></table></figure><h3 id="11-可能需要重新安装pip"><a href="#11-可能需要重新安装pip" class="headerlink" title="11.可能需要重新安装pip"></a>11.可能需要重新安装pip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;bootstrap.pypa.io&#x2F;get-pip.py --no-check-certificate</span><br><span class="line">sudo python3 get-pip.py</span><br></pre></td></tr></table></figure><h3 id="12-pip3-list-会发现有很多库消失了，需要重新安装，且还在的很多需要安装cp38版。OVER"><a href="#12-pip3-list-会发现有很多库消失了，需要重新安装，且还在的很多需要安装cp38版。OVER" class="headerlink" title="12.pip3 list 会发现有很多库消失了，需要重新安装，且还在的很多需要安装cp38版。OVER"></a>12.pip3 list 会发现有很多库消失了，需要重新安装，且还在的很多需要安装cp38版。OVER</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;本方法使用的是apt安装&quot;&gt;&lt;a href=&quot;#本方法使用的是apt安装&quot; class=&quot;headerlink&quot; title=&quot;本方法使用的是apt安装&quot;&gt;&lt;/a&gt;本方法使用的是apt安装&lt;/h3&gt;&lt;h3 id=&quot;1-搜索ppa-找到可用的源&quot;&gt;&lt;a href=&quot;#1-搜索ppa-找到可用的源&quot; class=&quot;headerlink&quot; title=&quot;1.搜索ppa,找到可用的源&quot;&gt;&lt;/a&gt;1.搜索ppa,找到可用的源&lt;/h3&gt;&lt;h3 id=&quot;2-在launchpad-net里搜索python3&quot;&gt;&lt;a href=&quot;#2-在launchpad-net里搜索python3&quot; class=&quot;headerlink&quot; title=&quot;2.在launchpad.net里搜索python3&quot;&gt;&lt;/a&gt;2.在launchpad.net里搜索python3&lt;/h3&gt;&lt;h3 id=&quot;3-建议找到一个叫Jonathon-F的用户，他编译的包比较可靠。可以进入他的主页找到他发布的python的各个版本。&quot;&gt;&lt;a href=&quot;#3-建议找到一个叫Jonathon-F的用户，他编译的包比较可靠。可以进入他的主页找到他发布的python的各个版本。&quot; class=&quot;headerlink&quot; title=&quot;3.建议找到一个叫Jonathon F的用户，他编译的包比较可靠。可以进入他的主页找到他发布的python的各个版本。&quot;&gt;&lt;/a&gt;3.建议找到一个叫Jonathon F的用户，他编译的包比较可靠。可以进入他的主页找到他发布的python的各个版本。&lt;/h3&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="ubuntu" scheme="https://inspiring26.github.io/tags/ubuntu/"/>
    
      <category term="python" scheme="https://inspiring26.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>chrome插件网页便利贴导致无法选中文字</title>
    <link href="https://inspiring26.github.io/2020/07/21/chrome%E6%8F%92%E4%BB%B6%E7%BD%91%E9%A1%B5%E4%BE%BF%E5%88%A9%E8%B4%B4%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E9%80%89%E4%B8%AD%E6%96%87%E5%AD%97/"/>
    <id>https://inspiring26.github.io/2020/07/21/chrome插件网页便利贴导致无法选中文字/</id>
    <published>2020-07-21T06:29:58.000Z</published>
    <updated>2020-07-21T06:32:12.078Z</updated>
    
    <content type="html"><![CDATA[<p>安装 网页便利贴 后发现一些输入框内的文字无法选中，左键松开选中就消失了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装 网页便利贴 后发现一些输入框内的文字无法选中，左键松开选中就消失了。&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="chrome" scheme="https://inspiring26.github.io/tags/chrome/"/>
    
      <category term="bug" scheme="https://inspiring26.github.io/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu桌面卡住解决办法</title>
    <link href="https://inspiring26.github.io/2020/07/15/ubuntu%E6%A1%8C%E9%9D%A2%E5%8D%A1%E4%BD%8F%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://inspiring26.github.io/2020/07/15/ubuntu桌面卡住解决办法/</id>
    <published>2020-07-15T01:42:28.000Z</published>
    <updated>2020-07-15T01:44:16.566Z</updated>
    
    <content type="html"><![CDATA[<p>alt + ctrl + f1<br>登录(login)<br>sudo lightdm restart</p><p>测试中，原来打开的窗口都还在。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;alt + ctrl + f1&lt;br&gt;登录(login)&lt;br&gt;sudo lightdm restart&lt;/p&gt;
&lt;p&gt;测试中，原来打开的窗口都还在。&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="ubuntu" scheme="https://inspiring26.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>关于unity的git版本控制</title>
    <link href="https://inspiring26.github.io/2020/06/28/%E5%85%B3%E4%BA%8Eunity%E7%9A%84git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    <id>https://inspiring26.github.io/2020/06/28/关于unity的git版本控制/</id>
    <published>2020-06-28T03:36:01.000Z</published>
    <updated>2020-06-28T04:27:59.698Z</updated>
    
    <content type="html"><![CDATA[<p>unity版本控制，只需对Assets和ProjectSettings做git控制就可以了<br>并且，不用担心，只包含这两个文件夹的工程也可以被unity hub添加为项目的，它会自己补上其他的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;unity版本控制，只需对Assets和ProjectSettings做git控制就可以了&lt;br&gt;并且，不用担心，只包含这两个文件夹的工程也可以被unity hub添加为项目的，它会自己补上其他的。&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="unity" scheme="https://inspiring26.github.io/tags/unity/"/>
    
      <category term="方法" scheme="https://inspiring26.github.io/tags/%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
