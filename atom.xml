<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你说你要一场革命</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://weehaa.top/"/>
  <updated>2021-11-11T08:52:52.774Z</updated>
  <id>http://weehaa.top/</id>
  
  <author>
    <name>huang yong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决m1的MacBook京东读书cpu占用过高的可能方法</title>
    <link href="http://weehaa.top/2021/11/11/%E8%A7%A3%E5%86%B3m1%E7%9A%84MacBook%E4%BA%AC%E4%B8%9C%E8%AF%BB%E4%B9%A6cpu%E5%8D%A0%E7%94%A8%E8%BF%87%E9%AB%98%E7%9A%84%E5%8F%AF%E8%83%BD%E6%96%B9%E6%B3%95/"/>
    <id>http://weehaa.top/2021/11/11/解决m1的MacBook京东读书cpu占用过高的可能方法/</id>
    <published>2021-11-11T11:06:50.000Z</published>
    <updated>2021-11-11T08:52:52.774Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在最前"><a href="#写在最前" class="headerlink" title="写在最前"></a>写在最前</h3><p>在m1系列MacBook上运行iPad版京东读书会存在cpu长期使用率在200%的情况。<br>从评论区发现，这个问题存在很长时间了，最近更新也没有修复这个问题(20211111)。<br>我在使用中发现综合使用后一些方法可以使cpu占用下降到正常水平，因为是综合尝试，所以尚不清楚是哪个步骤在起作用。<br>以下是过程及分析。</p><a id="more"></a><h3 id="退出app，不强制退出后台程序，让程序自己退出"><a href="#退出app，不强制退出后台程序，让程序自己退出" class="headerlink" title="退出app，不强制退出后台程序，让程序自己退出"></a>退出app，不强制退出后台程序，让程序自己退出</h3><p>1.测试了几次，退出app后，等待后台程序自动退出，再次打开app不做操作，cpu占用正常。<br>2.占用正常后打开书籍，cpu占用不会突变。</p><h3 id="打开软件后先不打开书籍，停留在书架页面或者在书城找书，等待占用降低"><a href="#打开软件后先不打开书籍，停留在书架页面或者在书城找书，等待占用降低" class="headerlink" title="打开软件后先不打开书籍，停留在书架页面或者在书城找书，等待占用降低"></a>打开软件后先不打开书籍，停留在书架页面或者在书城找书，等待占用降低</h3><p>如果上面步骤不能解决，可以尝试这个方式。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在最前&quot;&gt;&lt;a href=&quot;#写在最前&quot; class=&quot;headerlink&quot; title=&quot;写在最前&quot;&gt;&lt;/a&gt;写在最前&lt;/h3&gt;&lt;p&gt;在m1系列MacBook上运行iPad版京东读书会存在cpu长期使用率在200%的情况。&lt;br&gt;从评论区发现，这个问题存在很长时间了，最近更新也没有修复这个问题(20211111)。&lt;br&gt;我在使用中发现综合使用后一些方法可以使cpu占用下降到正常水平，因为是综合尝试，所以尚不清楚是哪个步骤在起作用。&lt;br&gt;以下是过程及分析。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="m1" scheme="http://weehaa.top/tags/m1/"/>
    
      <category term="Macbook" scheme="http://weehaa.top/tags/Macbook/"/>
    
  </entry>
  
  <entry>
    <title>macbook下conda创建nodejs虚拟环境</title>
    <link href="http://weehaa.top/2021/11/09/macbook%E4%B8%8Bconda%E5%88%9B%E5%BB%BAnodejs%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    <id>http://weehaa.top/2021/11/09/macbook下conda创建nodejs虚拟环境/</id>
    <published>2021-11-09T11:01:18.000Z</published>
    <updated>2021-11-11T08:52:52.774Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搜索nodejs及查看版本"><a href="#搜索nodejs及查看版本" class="headerlink" title="搜索nodejs及查看版本"></a>搜索nodejs及查看版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda search nodejs</span><br></pre></td></tr></table></figure><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 可以用等号指定版本</span><br><span class="line">conda create -n mynode nodejs</span><br></pre></td></tr></table></figure><h3 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate mynode</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo</span><br></pre></td></tr></table></figure><p>hexo运行出错后，根据提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf node_modules &amp;&amp; npm install --force</span><br><span class="line">hexo</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><br>hexo s正常运行即可</p><h3 id="退出虚拟环境、查看虚拟环境列表、"><a href="#退出虚拟环境、查看虚拟环境列表、" class="headerlink" title="退出虚拟环境、查看虚拟环境列表、"></a>退出虚拟环境、查看虚拟环境列表、</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br><span class="line">conda info --envs</span><br><span class="line"># 或 conda info -e</span><br><span class="line">conda remove -n 虚拟环境名  --all</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;搜索nodejs及查看版本&quot;&gt;&lt;a href=&quot;#搜索nodejs及查看版本&quot; class=&quot;headerlink&quot; title=&quot;搜索nodejs及查看版本&quot;&gt;&lt;/a&gt;搜索nodejs及查看版本&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;conda search nodejs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&quot;创建虚拟环境&quot;&gt;&lt;a href=&quot;#创建虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;创建虚拟环境&quot;&gt;&lt;/a&gt;创建虚拟环境&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 可以用等号指定版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conda create -n mynode nodejs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&quot;激活环境&quot;&gt;&lt;a href=&quot;#激活环境&quot; class=&quot;headerlink&quot; title=&quot;激活环境&quot;&gt;&lt;/a&gt;激活环境&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;conda activate mynode&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="记录" scheme="http://weehaa.top/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="mac" scheme="http://weehaa.top/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>archlinux或manjaro安装keepass中文及解决乱码问题</title>
    <link href="http://weehaa.top/2021/08/12/archlinux%E6%88%96manjaro%E5%AE%89%E8%A3%85keepass%E4%B8%AD%E6%96%87%E5%8F%8A%E8%A7%A3%E5%86%B3%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://weehaa.top/2021/08/12/archlinux或manjaro安装keepass中文及解决乱码问题/</id>
    <published>2021-08-12T08:25:20.000Z</published>
    <updated>2021-08-12T08:27:10.970Z</updated>
    
    <content type="html"><![CDATA[<h3 id="yay安装"><a href="#yay安装" class="headerlink" title="yay安装"></a>yay安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S keepass-zh-cn</span><br></pre></td></tr></table></figure><h3 id="解决中文乱码问题"><a href="#解决中文乱码问题" class="headerlink" title="解决中文乱码问题"></a>解决中文乱码问题</h3><p>Tools -&gt; Options -&gt; Interface -&gt; 最后<br>去掉Force using system font (Unix only)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;yay安装&quot;&gt;&lt;a href=&quot;#yay安装&quot; class=&quot;headerlink&quot; title=&quot;yay安装&quot;&gt;&lt;/a&gt;yay安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="manjaro" scheme="http://weehaa.top/tags/manjaro/"/>
    
  </entry>
  
  <entry>
    <title>pandas使用匿名函数处理多列时需要加axis=1</title>
    <link href="http://weehaa.top/2021/08/12/pandas%E4%BD%BF%E7%94%A8%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86%E5%A4%9A%E5%88%97%E6%97%B6%E9%9C%80%E8%A6%81%E5%8A%A0axis-1/"/>
    <id>http://weehaa.top/2021/08/12/pandas使用匿名函数处理多列时需要加axis-1/</id>
    <published>2021-08-12T03:07:23.000Z</published>
    <updated>2021-08-12T03:17:52.542Z</updated>
    
    <content type="html"><![CDATA[<p>pandas在结合多列数据产生新列时，匿名函数的传入参数还是一个，表达式中要使用时需要加上指定字段，当传如的多于一列时需要加axis。<br>只有一列时可加可不加。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for k in title_dict:</span><br><span class="line">    tmpDF[k.replace(&quot;$$&quot;,&quot;json&quot;)]&#x3D;tmpDF[&quot;event_kv_json&quot;].apply(lambda x:json.loads(x).get(k,&quot;&quot;))</span><br></pre></td></tr></table></figure></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmpDF[&quot;custom&quot;]&#x3D;tmpDF[&quot;event_kv_json&quot;].apply(lambda x: json.dumps(&#123;_:json.loads(x)[_] for _ in json.loads(x) if not _.startswith(&quot;$$&quot;)&#125;))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmpdf2[&quot;umid_diff2&quot;]&#x3D;tmpdf2[[&quot;point&quot;,&quot;umid_diff&quot;]].apply(lambda x:True if x[&quot;point&quot;]&#x3D;&#x3D;&quot;s&quot; else x[&quot;umid_diff&quot;]  ,axis&#x3D;1)</span><br></pre></td></tr></table></figure><p>也可以用apply来创建新的确定列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[&#39;a&#39;]&#x3D;df.apply(lambda x:&quot;&quot;, axis&#x3D;1)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;pandas在结合多列数据产生新列时，匿名函数的传入参数还是一个，表达式中要使用时需要加上指定字段，当传如的多于一列时需要加axis。&lt;br&gt;只有一列时可加可不加。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for k in title_dict:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tmpDF[k.replace(&amp;quot;$$&amp;quot;,&amp;quot;json&amp;quot;)]&amp;#x3D;tmpDF[&amp;quot;event_kv_json&amp;quot;].apply(lambda x:json.loads(x).get(k,&amp;quot;&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
      <category term="pandas" scheme="http://weehaa.top/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>几个终端下可用的查询外网ip方式</title>
    <link href="http://weehaa.top/2021/07/19/%E5%87%A0%E4%B8%AA%E7%BB%88%E7%AB%AF%E4%B8%8B%E5%8F%AF%E7%94%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%A4%96%E7%BD%91ip%E6%96%B9%E5%BC%8F/"/>
    <id>http://weehaa.top/2021/07/19/几个终端下可用的查询外网ip方式/</id>
    <published>2021-07-19T10:06:17.000Z</published>
    <updated>2021-07-19T10:07:00.937Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[h@h-b360md2vxsi 下载]$ curl cip.cc</span><br><span class="line">IP      : 121.42.167.87</span><br><span class="line">地址    : 中国  山东  青岛</span><br><span class="line">运营商  : 阿里云&#x2F;电信&#x2F;联通&#x2F;移动&#x2F;铁通&#x2F;教育网</span><br><span class="line"></span><br><span class="line">数据二  : 山东省青岛市 | 阿里云</span><br><span class="line"></span><br><span class="line">数据三  : 中国山东青岛 | 阿里云</span><br><span class="line"></span><br><span class="line">URL     : http:&#x2F;&#x2F;www.cip.cc&#x2F;121.42.167.87</span><br><span class="line"></span><br><span class="line">[h@h-b360md2vxsi 下载]$ curl icanhazip.com</span><br><span class="line">121.42.167.87</span><br><span class="line"></span><br><span class="line">[h@h-b360md2vxsi 下载]$ curl ident.me</span><br><span class="line">121.42.167.87</span><br><span class="line"></span><br><span class="line">[h@h-b360md2vxsi 下载]$ curl whatismyip.akamai.com</span><br><span class="line">121.42.167.87</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Dockerfile几个技巧</title>
    <link href="http://weehaa.top/2021/07/07/Dockerfile%E5%87%A0%E4%B8%AA%E6%8A%80%E5%B7%A7/"/>
    <id>http://weehaa.top/2021/07/07/Dockerfile几个技巧/</id>
    <published>2021-07-07T08:59:52.000Z</published>
    <updated>2021-07-07T09:04:58.860Z</updated>
    
    <content type="html"><![CDATA[<p>在用Dockerfile构建镜像时，有以下几个技巧</p><h4 id="1-先只写到copy字段，然后进去逐步运行，可运行后再在Dockerfile里写"><a href="#1-先只写到copy字段，然后进去逐步运行，可运行后再在Dockerfile里写" class="headerlink" title="1.先只写到copy字段，然后进去逐步运行，可运行后再在Dockerfile里写"></a>1.先只写到copy字段，然后进去逐步运行，可运行后再在Dockerfile里写</h4><h4 id="2-有错误的镜像，直接将版本号递增，等最终完成后在一次性清理"><a href="#2-有错误的镜像，直接将版本号递增，等最终完成后在一次性清理" class="headerlink" title="2.有错误的镜像，直接将版本号递增，等最终完成后在一次性清理"></a>2.有错误的镜像，直接将版本号递增，等最终完成后在一次性清理</h4><h4 id="3-在每个项目目录里可以建一个Dockerfile文件夹，打包后到其他地方解压就可以build并运行，可以把docker-run指令写在Dockerfile文件注释里"><a href="#3-在每个项目目录里可以建一个Dockerfile文件夹，打包后到其他地方解压就可以build并运行，可以把docker-run指令写在Dockerfile文件注释里" class="headerlink" title="3.在每个项目目录里可以建一个Dockerfile文件夹，打包后到其他地方解压就可以build并运行，可以把docker run指令写在Dockerfile文件注释里"></a>3.在每个项目目录里可以建一个Dockerfile文件夹，打包后到其他地方解压就可以build并运行，可以把docker run指令写在Dockerfile文件注释里</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在用Dockerfile构建镜像时，有以下几个技巧&lt;/p&gt;
&lt;h4 id=&quot;1-先只写到copy字段，然后进去逐步运行，可运行后再在Dockerfile里写&quot;&gt;&lt;a href=&quot;#1-先只写到copy字段，然后进去逐步运行，可运行后再在Dockerfile里写&quot; class
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://weehaa.top/tags/docker/"/>
    
      <category term="经验" scheme="http://weehaa.top/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>python判断是不是在jupyter中</title>
    <link href="http://weehaa.top/2021/07/07/python%E5%88%A4%E6%96%AD%E6%98%AF%E4%B8%8D%E6%98%AF%E5%9C%A8jupyter%E4%B8%AD/"/>
    <id>http://weehaa.top/2021/07/07/python判断是不是在jupyter中/</id>
    <published>2021-07-07T08:50:19.000Z</published>
    <updated>2021-07-07T08:54:15.010Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在jupyter中判断"><a href="#在jupyter中判断" class="headerlink" title="在jupyter中判断"></a>在jupyter中判断</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.environ[&#39;_&#39;]</span><br><span class="line"></span><br><span class="line">&#39;&#x2F;usr&#x2F;bin&#x2F;jupyter&#39;</span><br></pre></td></tr></table></figure><h3 id="在终端交互环境判断"><a href="#在终端交互环境判断" class="headerlink" title="在终端交互环境判断"></a>在终端交互环境判断</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import os</span><br><span class="line">&gt;&gt;&gt; os.environ[&#39;_&#39;]</span><br><span class="line">&#39;&#x2F;usr&#x2F;bin&#x2F;python3&#39;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="为了使在jupyter里写的程序方便导出来，可以这样"><a href="#为了使在jupyter里写的程序方便导出来，可以这样" class="headerlink" title="为了使在jupyter里写的程序方便导出来，可以这样"></a>为了使在jupyter里写的程序方便导出来，可以这样</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">if &quot;jupyter&quot; in os.environ[&#39;_&#39;]:</span><br><span class="line">    from tqdm.notebook import tqdm</span><br><span class="line">else:</span><br><span class="line">    from tqdm import tqdm</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;在jupyter中判断&quot;&gt;&lt;a href=&quot;#在jupyter中判断&quot; class=&quot;headerlink&quot; title=&quot;在jupyter中判断&quot;&gt;&lt;/a&gt;在jupyter中判断&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.environ[&amp;#39;_&amp;#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#39;&amp;#x2F;usr&amp;#x2F;bin&amp;#x2F;jupyter&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&quot;在终端交互环境判断&quot;&gt;&lt;a href=&quot;#在终端交互环境判断&quot; class=&quot;headerlink&quot; title=&quot;在终端交互环境判断&quot;&gt;&lt;/a&gt;在终端交互环境判断&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; os.environ[&amp;#39;_&amp;#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#39;&amp;#x2F;usr&amp;#x2F;bin&amp;#x2F;python3&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>服务器上部署hexo镜像或者个人其他镜像</title>
    <link href="http://weehaa.top/2021/07/02/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E9%95%9C%E5%83%8F%E6%88%96%E8%80%85%E4%B8%AA%E4%BA%BA%E5%85%B6%E4%BB%96%E9%95%9C%E5%83%8F/"/>
    <id>http://weehaa.top/2021/07/02/服务器上部署hexo镜像或者个人其他镜像/</id>
    <published>2021-07-02T08:32:44.000Z</published>
    <updated>2021-07-02T08:39:55.178Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在开始前"><a href="#写在开始前" class="headerlink" title="写在开始前"></a>写在开始前</h3><p>这不是理想的方法，理想的方法是使用私有镜像仓库push pull,并且docker提供的有部署私有仓库的镜像叫registry。<br>这是本地创建镜像的记录。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如果把文件夹及Dockerfile复制到服务器上</span><br><span class="line">sudo docker build -t hexoblog:v1.0 .</span><br><span class="line">docker run -dit -p 4000:8080 hexoblog:v1.0</span><br><span class="line">ssh-keygen -t  rsa</span><br><span class="line">cat &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub</span><br><span class="line">添加到github</span><br><span class="line">setsid sh autoPull.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;写在开始前&quot;&gt;&lt;a href=&quot;#写在开始前&quot; class=&quot;headerlink&quot; title=&quot;写在开始前&quot;&gt;&lt;/a&gt;写在开始前&lt;/h3&gt;&lt;p&gt;这不是理想的方法，理想的方法是使用私有镜像仓库push pull,并且docker提供的有部署私有仓库的镜像叫reg
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://weehaa.top/tags/docker/"/>
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="hexo" scheme="http://weehaa.top/tags/hexo/"/>
    
      <category term="部署" scheme="http://weehaa.top/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>docker启动容器就运行</title>
    <link href="http://weehaa.top/2021/07/02/docker%E5%90%AF%E5%8A%A8%E5%AE%B9%E5%99%A8%E5%B0%B1%E8%BF%90%E8%A1%8C/"/>
    <id>http://weehaa.top/2021/07/02/docker启动容器就运行/</id>
    <published>2021-07-02T08:20:02.000Z</published>
    <updated>2021-07-02T08:26:38.864Z</updated>
    
    <content type="html"><![CDATA[<h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit -p 4001:8080 hexoblog:v1.0</span><br></pre></td></tr></table></figure><br>就创建容器并运行blog服务</p><h3 id="CMD方式"><a href="#CMD方式" class="headerlink" title="CMD方式"></a>CMD方式</h3><p>Dockerfile里的CMD指令是会被docker run后面加的指令覆盖的。<br>并且，多个CMD只会执行最后一个。<br>使用方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMD [&quot;hexo&quot;, &quot;s&quot;, &quot;-p&quot;, &quot;8080&quot;, &quot;&amp;&quot;]</span><br></pre></td></tr></table></figure><br>正常，启动就运行。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMD hexo s -p 8080 &amp;</span><br></pre></td></tr></table></figure><p>这种直接写shell语句是无法正常运行的。</p><h3 id="ENTRYPOINT方式"><a href="#ENTRYPOINT方式" class="headerlink" title="ENTRYPOINT方式"></a>ENTRYPOINT方式</h3><p>ENTRYPOINT是一种不会被docker run 后面指令覆盖的方式。<br>使用方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENTRYPOINT [&quot;hexo&quot;, &quot;s&quot;, &quot;-p&quot;, &quot;8080&quot;, &quot;&amp;&quot;]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h3&gt;&lt;p&gt;执行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -dit -p 4001:8080 hexoblog:v1.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;就创建容器并运行blog服务&lt;/p&gt;&lt;h3 id=&quot;CMD方式&quot;&gt;&lt;a href=&quot;#CMD方式&quot; class=&quot;headerlink&quot; title=&quot;CMD方式&quot;&gt;&lt;/a&gt;CMD方式&lt;/h3&gt;&lt;p&gt;Dockerfile里的CMD指令是会被docker run后面加的指令覆盖的。&lt;br&gt;并且，多个CMD只会执行最后一个。&lt;br&gt;使用方式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CMD [&amp;quot;hexo&amp;quot;, &amp;quot;s&amp;quot;, &amp;quot;-p&amp;quot;, &amp;quot;8080&amp;quot;, &amp;quot;&amp;amp;&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;正常，启动就运行。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="docker" scheme="http://weehaa.top/tags/docker/"/>
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>linux创建.desktop程序</title>
    <link href="http://weehaa.top/2021/07/01/linux%E5%88%9B%E5%BB%BA-desktop%E7%A8%8B%E5%BA%8F/"/>
    <id>http://weehaa.top/2021/07/01/linux创建-desktop程序/</id>
    <published>2021-07-01T18:03:24.000Z</published>
    <updated>2021-07-02T02:05:15.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-确定程序可以双击执行"><a href="#1-确定程序可以双击执行" class="headerlink" title="1.确定程序可以双击执行"></a>1.确定程序可以双击执行</h3><h3 id="2-创建-desktop文件"><a href="#2-创建-desktop文件" class="headerlink" title="2.创建.desktop文件"></a>2.创建.desktop文件</h3><p>主要是填写文件位置和添加图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Encoding&#x3D;UTF-8</span><br><span class="line">Version&#x3D;1.0</span><br><span class="line">Type&#x3D;Application</span><br><span class="line">Terminal&#x3D;false</span><br><span class="line">Exec&#x3D;&#x2F;home&#x2F;h&#x2F;下载&#x2F;VNC-Viewer-6.21.406-Linux-x64&#x2F;vncviewer</span><br><span class="line">Name&#x3D;vnc view</span><br><span class="line">Icon&#x3D;&#x2F;home&#x2F;h&#x2F;下载&#x2F;VNC-Viewer-6.21.406-Linux-x64&#x2F;icons&#x2F;vncviewer48x48.png</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="3-复制到-usr-share-applications"><a href="#3-复制到-usr-share-applications" class="headerlink" title="3.复制到/usr/share/applications"></a>3.复制到/usr/share/applications</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp vncview.desktop &#x2F;usr&#x2F;share&#x2F;applications&#x2F;</span><br></pre></td></tr></table></figure><h3 id="4-至此可以在系统里搜到app"><a href="#4-至此可以在系统里搜到app" class="headerlink" title="4.至此可以在系统里搜到app"></a>4.至此可以在系统里搜到app</h3><p>over</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-确定程序可以双击执行&quot;&gt;&lt;a href=&quot;#1-确定程序可以双击执行&quot; class=&quot;headerlink&quot; title=&quot;1.确定程序可以双击执行&quot;&gt;&lt;/a&gt;1.确定程序可以双击执行&lt;/h3&gt;&lt;h3 id=&quot;2-创建-desktop文件&quot;&gt;&lt;a href=&quot;#2-创建-desktop文件&quot; class=&quot;headerlink&quot; title=&quot;2.创建.desktop文件&quot;&gt;&lt;/a&gt;2.创建.desktop文件&lt;/h3&gt;&lt;p&gt;主要是填写文件位置和添加图片&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Desktop Entry]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Encoding&amp;#x3D;UTF-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Version&amp;#x3D;1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type&amp;#x3D;Application&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Terminal&amp;#x3D;false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exec&amp;#x3D;&amp;#x2F;home&amp;#x2F;h&amp;#x2F;下载&amp;#x2F;VNC-Viewer-6.21.406-Linux-x64&amp;#x2F;vncviewer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name&amp;#x3D;vnc view&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Icon&amp;#x3D;&amp;#x2F;home&amp;#x2F;h&amp;#x2F;下载&amp;#x2F;VNC-Viewer-6.21.406-Linux-x64&amp;#x2F;icons&amp;#x2F;vncviewer48x48.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="http://weehaa.top/tags/linux/"/>
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="manjaro" scheme="http://weehaa.top/tags/manjaro/"/>
    
  </entry>
  
  <entry>
    <title>swiftui的state</title>
    <link href="http://weehaa.top/2021/05/27/swiftui%E7%9A%84state/"/>
    <id>http://weehaa.top/2021/05/27/swiftui的state/</id>
    <published>2021-05-27T11:13:11.000Z</published>
    <updated>2021-05-27T06:35:15.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="主要用途"><a href="#主要用途" class="headerlink" title="主要用途"></a>主要用途</h3><p>1.进行私有状态管理<br>2.驱动view的显示<br>当@state 声明的值发生变化时，它所在的struct下的body会重新求值，body里使用的其他View会重新创建。从而使body包含的内容被重新渲染了一遍。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import SwiftUI</span><br><span class="line"></span><br><span class="line">struct DetailView:View &#123;</span><br><span class="line">    let number:Int</span><br><span class="line">    var body: some View&#123;</span><br><span class="line">        Text(&quot;The Value: \(number)&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct AddOneView: View &#123;</span><br><span class="line">    @State private var value &#x3D; 0</span><br><span class="line">    var body: some View &#123;</span><br><span class="line">        VStack(alignment: .center) &#123;</span><br><span class="line">&#x2F;&#x2F;            Text(&quot;The Value: \(value)&quot;)</span><br><span class="line">            DetailView(number:value)</span><br><span class="line">            Button(&quot;+1&quot;)&#123;</span><br><span class="line">                value +&#x3D; 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct AddOneView_Previews: PreviewProvider &#123;</span><br><span class="line">    static var previews: some View &#123;</span><br><span class="line">        AddOneView()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;主要用途&quot;&gt;&lt;a href=&quot;#主要用途&quot; class=&quot;headerlink&quot; title=&quot;主要用途&quot;&gt;&lt;/a&gt;主要用途&lt;/h3&gt;&lt;p&gt;1.进行私有状态管理&lt;br&gt;2.驱动view的显示&lt;br&gt;当@state 声明的值发生变化时，它所在的struct下的bod
      
    
    </summary>
    
    
    
      <category term="总结" scheme="http://weehaa.top/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="swiftui" scheme="http://weehaa.top/tags/swiftui/"/>
    
  </entry>
  
  <entry>
    <title>安装nodejs、npm、hexo</title>
    <link href="http://weehaa.top/2021/05/24/%E5%AE%89%E8%A3%85nodejs%E3%80%81npm%E3%80%81hexo/"/>
    <id>http://weehaa.top/2021/05/24/安装nodejs、npm、hexo/</id>
    <published>2021-05-24T18:07:25.000Z</published>
    <updated>2021-05-24T10:15:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="去nodejs官方网站下载安装包"><a href="#去nodejs官方网站下载安装包" class="headerlink" title="去nodejs官方网站下载安装包"></a>去nodejs官方网站下载安装包</h3><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官方地址</a><br>比如下载Linux Binaries (x64)版</p><h3 id="参考下载页面下的链接安装"><a href="#参考下载页面下的链接安装" class="headerlink" title="参考下载页面下的链接安装"></a>参考下载页面下的链接安装</h3><p>比如参考名为Installing Node.js via binary archive的链接<br><a href="https://github.com/nodejs/help/wiki/Installation" target="_blank" rel="noopener">安装流程页面</a></p><a id="more"></a><p>修改VERSION为下载安装包版本后，按1、2、3、4步骤完成nodejs、npm安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.Unzip the binary archive to any directory you wanna install Node, I use &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs</span><br><span class="line"> VERSION&#x3D;v10.15.0</span><br><span class="line"> DISTRO&#x3D;linux-x64</span><br><span class="line"> sudo mkdir -p &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs</span><br><span class="line"> sudo tar -xJvf node-$VERSION-$DISTRO.tar.xz -C &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs </span><br><span class="line">2.Set the environment variable ~&#x2F;.profile, add below to the end</span><br><span class="line"># Nodejs</span><br><span class="line">VERSION&#x3D;v10.15.0</span><br><span class="line">DISTRO&#x3D;linux-x64</span><br><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs&#x2F;node-$VERSION-$DISTRO&#x2F;bin:$PATH</span><br><span class="line">3.Refresh profile</span><br><span class="line">. ~&#x2F;.profile</span><br><span class="line">4.Test installation using</span><br><span class="line">$ node -v</span><br><span class="line"></span><br><span class="line">$ npm version</span><br><span class="line"></span><br><span class="line">$ npx -v</span><br></pre></td></tr></table></figure></p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>之后执行hexo，显示正常即完成安装。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;去nodejs官方网站下载安装包&quot;&gt;&lt;a href=&quot;#去nodejs官方网站下载安装包&quot; class=&quot;headerlink&quot; title=&quot;去nodejs官方网站下载安装包&quot;&gt;&lt;/a&gt;去nodejs官方网站下载安装包&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方地址&lt;/a&gt;&lt;br&gt;比如下载Linux Binaries (x64)版&lt;/p&gt;&lt;h3 id=&quot;参考下载页面下的链接安装&quot;&gt;&lt;a href=&quot;#参考下载页面下的链接安装&quot; class=&quot;headerlink&quot; title=&quot;参考下载页面下的链接安装&quot;&gt;&lt;/a&gt;参考下载页面下的链接安装&lt;/h3&gt;&lt;p&gt;比如参考名为Installing Node.js via binary archive的链接&lt;br&gt;&lt;a href=&quot;https://github.com/nodejs/help/wiki/Installation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;安装流程页面&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>python昨天</title>
    <link href="http://weehaa.top/2021/05/11/python%E6%98%A8%E5%A4%A9/"/>
    <id>http://weehaa.top/2021/05/11/python昨天/</id>
    <published>2021-05-11T11:42:57.000Z</published>
    <updated>2021-05-11T03:44:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>python获取昨天日期<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import datetime</span><br><span class="line">&gt;&gt;&gt; datetime.date.today() + datetime.timedelta(-1)</span><br><span class="line">datetime.date(2021, 5, 10)</span><br><span class="line">&gt;&gt;&gt; (datetime.date.today() + datetime.timedelta(-1)).strftime(&quot;%Y%m%d&quot;)</span><br><span class="line">&#39;20210510&#39;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;python获取昨天日期&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>git本地commit后补充内容</title>
    <link href="http://weehaa.top/2021/04/29/git%E6%9C%AC%E5%9C%B0commit%E5%90%8E%E8%A1%A5%E5%85%85%E5%86%85%E5%AE%B9/"/>
    <id>http://weehaa.top/2021/04/29/git本地commit后补充内容/</id>
    <published>2021-04-29T13:29:54.000Z</published>
    <updated>2021-04-29T05:38:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>经常会出现提交后又做了新的修改，又不想把新修改作为新commit的情况。<br>可以先直接修改文件。<br>修改后，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --soft HEAD^</span><br></pre></td></tr></table></figure><br>这时修改的文件都还在，也就是说对本地文件没做任何修改，把指针后移了一位。<br>然后将要git add的文件，如果本地已经删除的文件还要再git rm一次将暂存区的文件删除（此时本地已经删除过了，暂存区要像上次提交一样再删除一次）。<br>这时可以使用之前的commit文本再commit一次了。</p><a id="more"></a><p>这样就实现了，做小修改还维持原来的commit。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常会出现提交后又做了新的修改，又不想把新修改作为新commit的情况。&lt;br&gt;可以先直接修改文件。&lt;br&gt;修改后，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset --soft HEAD^&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这时修改的文件都还在，也就是说对本地文件没做任何修改，把指针后移了一位。&lt;br&gt;然后将要git add的文件，如果本地已经删除的文件还要再git rm一次将暂存区的文件删除（此时本地已经删除过了，暂存区要像上次提交一样再删除一次）。&lt;br&gt;这时可以使用之前的commit文本再commit一次了。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="git" scheme="http://weehaa.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>python3列表、元组、字典序列化反序列化</title>
    <link href="http://weehaa.top/2021/04/29/python3%E5%88%97%E8%A1%A8%E3%80%81%E5%85%83%E7%BB%84%E3%80%81%E5%AD%97%E5%85%B8%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://weehaa.top/2021/04/29/python3列表、元组、字典序列化反序列化/</id>
    <published>2021-04-29T11:32:32.000Z</published>
    <updated>2021-04-29T03:41:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>序列化，反序列化分别使用json.dumps()、json.loads()。</p><p>列表：序列化后是str，反序列化是list<br>元组：序列化后是str，反序列化是list<br>字典：序列化后是str，反序列化是dict</p><a id="more"></a><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import json</span><br><span class="line">&gt;&gt;&gt; tmp&#x3D;[1,2,3]</span><br><span class="line">&gt;&gt;&gt; jtmp&#x3D;json.dumps(tmp)</span><br><span class="line">&gt;&gt;&gt; type(jtmp)</span><br><span class="line">&lt;class &#39;str&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; type(json.loads(jtmp))</span><br><span class="line">&lt;class &#39;list&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; tmp&#x3D;(1,2,3)</span><br><span class="line">&gt;&gt;&gt; jtmp&#x3D;json.dumps(tmp)</span><br><span class="line">&gt;&gt;&gt; type(jtmp)</span><br><span class="line">&lt;class &#39;str&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; type(json.loads(jtmp))</span><br><span class="line">&lt;class &#39;list&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; tmp&#x3D;&#123;1:1,2:2&#125;</span><br><span class="line">&gt;&gt;&gt; jtmp&#x3D;json.dumps(tmp)</span><br><span class="line">&gt;&gt;&gt; type(jtmp)</span><br><span class="line">&lt;class &#39;str&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; type(json.loads(jtmp))</span><br><span class="line">&lt;class &#39;dict&#39;&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;序列化，反序列化分别使用json.dumps()、json.loads()。&lt;/p&gt;&lt;p&gt;列表：序列化后是str，反序列化是list&lt;br&gt;元组：序列化后是str，反序列化是list&lt;br&gt;字典：序列化后是str，反序列化是dict&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pytorch自定义损失函数</title>
    <link href="http://weehaa.top/2021/04/15/pytorch%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/"/>
    <id>http://weehaa.top/2021/04/15/pytorch自定义损失函数/</id>
    <published>2021-04-15T16:40:39.000Z</published>
    <updated>2021-04-15T10:31:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>在深度学习中有时需要使用自定义损失函数，或者为了更好的理解各个环节而使用自定义损失函数。<br>在pytorch中自定义损失函数实现的比较简单，就像实现一个小型网络一样。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class LossFunc(nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(LossFunc, self).__init__()        </span><br><span class="line">    def forward(self, prelist, ylist):</span><br><span class="line">        dif&#x3D;torch.abs(prelist-ylist)</span><br><span class="line">        coef&#x3D;ylist.clone()</span><br><span class="line">        coef[coef&gt;&#x3D;0.5]&#x3D;2</span><br><span class="line">        coef[coef&lt;0.5]&#x3D;1</span><br><span class="line">        dif&#x3D;torch.mul(dif,coef)       </span><br><span class="line">        return torch.sum(dif)&#x2F;&#x2F;ylist.size()[0]</span><br><span class="line">mylossfunc&#x3D;LossFunc()</span><br><span class="line">mylossfunc&#x3D;mylossfunc.cuda()</span><br></pre></td></tr></table></figure><a id="more"></a><p>这是一个自己写的 均差，相当于均方误差没有求平方。<br>写的时候注意尽量求平均的，不要导致返回的结果过大，可以类比着已有的损失函数，做部分修改。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在深度学习中有时需要使用自定义损失函数，或者为了更好的理解各个环节而使用自定义损失函数。&lt;br&gt;在pytorch中自定义损失函数实现的比较简单，就像实现一个小型网络一样。&lt;/p&gt;&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class LossFunc(nn.Module):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(LossFunc, self).__init__()        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def forward(self, prelist, ylist):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dif&amp;#x3D;torch.abs(prelist-ylist)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        coef&amp;#x3D;ylist.clone()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        coef[coef&amp;gt;&amp;#x3D;0.5]&amp;#x3D;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        coef[coef&amp;lt;0.5]&amp;#x3D;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dif&amp;#x3D;torch.mul(dif,coef)       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return torch.sum(dif)&amp;#x2F;&amp;#x2F;ylist.size()[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mylossfunc&amp;#x3D;LossFunc()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mylossfunc&amp;#x3D;mylossfunc.cuda()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="pytorch" scheme="http://weehaa.top/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>jupyter日常测性能</title>
    <link href="http://weehaa.top/2021/04/15/jupyter%E6%97%A5%E5%B8%B8%E6%B5%8B%E6%80%A7%E8%83%BD/"/>
    <id>http://weehaa.top/2021/04/15/jupyter日常测性能/</id>
    <published>2021-04-15T16:15:17.000Z</published>
    <updated>2021-04-15T08:28:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>在jupyter中日常测试不同表达方式的执行效率，进而做取舍时，直接新开一行以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%%timeit</span><br></pre></td></tr></table></figure><br>开头即可</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">way1&#x3D;LossFunc()</span><br><span class="line">way1&#x3D;way1.cuda()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%timeit</span><br><span class="line">tmp&#x3D;way1(torch.rand(10000,1),torch.rand(10000,1))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在jupyter中日常测试不同表达方式的执行效率，进而做取舍时，直接新开一行以&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
      
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python生成随机字符串</title>
    <link href="http://weehaa.top/2021/03/24/python%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://weehaa.top/2021/03/24/python生成随机字符串/</id>
    <published>2021-03-24T13:16:42.000Z</published>
    <updated>2021-03-24T05:24:47.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>1.大小写字母<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import random, string</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.join(random.sample(string.ascii_letters,9))</span><br><span class="line">&#39;HkJdpZclC&#39;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>2.大小字母+数字（字母开头）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import random, string</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.join(random.sample(string.ascii_letters,1)+random.sample(string.ascii_letters+string.digits,9))</span><br><span class="line">&#39;CX41uNHykR&#39;</span><br></pre></td></tr></table></figure></p><h3 id="元素拆解"><a href="#元素拆解" class="headerlink" title="元素拆解"></a>元素拆解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string.ascii_letters</span><br><span class="line">&#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</span><br><span class="line">&gt;&gt;&gt; string.digits</span><br><span class="line">&#39;0123456789&#39;</span><br><span class="line">&gt;&gt;&gt; random.sample(&#39;123456789&#39;, 4)</span><br><span class="line">[&#39;7&#39;, &#39;8&#39;, &#39;5&#39;, &#39;4&#39;]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;方法&quot;&gt;&lt;a href=&quot;#方法&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h3&gt;&lt;p&gt;1.大小写字母&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import random, string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &amp;quot;&amp;quot;.join(random.sample(string.ascii_letters,9))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#39;HkJdpZclC&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>清空文件的几种方法</title>
    <link href="http://weehaa.top/2021/03/09/%E6%B8%85%E7%A9%BA%E6%96%87%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://weehaa.top/2021/03/09/清空文件的几种方法/</id>
    <published>2021-03-09T11:25:59.000Z</published>
    <updated>2021-03-09T03:30:57.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="重定向方式"><a href="#重定向方式" class="headerlink" title="重定向方式"></a>重定向方式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 1.</span><br><span class="line">&gt; test.txt</span><br><span class="line"># 2.</span><br><span class="line">: &gt; test.txt</span><br><span class="line"># 3.</span><br><span class="line">true &gt; test.txt</span><br></pre></td></tr></table></figure><h3 id="使用工具指令"><a href="#使用工具指令" class="headerlink" title="使用工具指令"></a>使用工具指令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 4.</span><br><span class="line">cat &#x2F;dev&#x2F;null &gt; test.txt</span><br><span class="line"># 5.</span><br><span class="line">cp &#x2F;dev&#x2F;null test.txt</span><br><span class="line"># 6.</span><br><span class="line">dd if&#x3D;&#x2F;dev&#x2F;null of&#x3D;test.txt</span><br><span class="line"># 7.</span><br><span class="line">echo -n &quot;&quot; &gt; test.txt # -n是为了是不显示空白行</span><br><span class="line"># 8.</span><br><span class="line">echo -n &gt; test.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;重定向方式&quot;&gt;&lt;a href=&quot;#重定向方式&quot; class=&quot;headerlink&quot; title=&quot;重定向方式&quot;&gt;&lt;/a&gt;重定向方式&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://weehaa.top/tags/linux/"/>
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>python跳出if语句</title>
    <link href="http://weehaa.top/2021/02/04/python%E8%B7%B3%E5%87%BAif%E8%AF%AD%E5%8F%A5/"/>
    <id>http://weehaa.top/2021/02/04/python跳出if语句/</id>
    <published>2021-02-04T14:39:00.000Z</published>
    <updated>2021-02-04T07:03:30.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>喜欢在循环、函数里使用多个单行的if判断，如果true直接跳出。<br>类似常用的传值类型判断。<br>类似以下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def func(a):</span><br><span class="line">    if a&#x3D;&#x3D;&quot;&quot;:print(&quot;empty value&quot;);return</span><br><span class="line">    if a%10&#x3D;&#x3D;0:print(&quot;err vaule&quot;);return</span><br><span class="line"></span><br><span class="line">for i in range(100):</span><br><span class="line">    if key1 not in dict1:print(&quot;err key&quot;);continue</span><br><span class="line">    if dict1[key1]&#x3D;&#x3D;&quot;&quot;:print(&quot;empty value&quot;);continue</span><br></pre></td></tr></table></figure><br>这种句式的好处是逻辑非常清晰。</p><a id="more"></a><p>但是有时要在if里嵌套if，因为它不是函数也不是循环，就无法正常退出。<br>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if 存在文件a:</span><br><span class="line">    if 存在a文件昨天日期的备份：结束</span><br><span class="line">    备份a并加上昨天的日期</span><br></pre></td></tr></table></figure></p><p>当然可以用if…else解决，但是结构就不那么清晰</p><h3 id="我的多此一举的解决方法"><a href="#我的多此一举的解决方法" class="headerlink" title="我的多此一举的解决方法"></a>我的多此一举的解决方法</h3><p>为了达到我的逐行判断、逻辑清晰的目的，我决定这么使用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in range(1):</span><br><span class="line">    if 不存在a：print(&quot;不存在a&quot;);continue</span><br><span class="line">    if 存在a文件昨天日期的备份:continue</span><br><span class="line">    备份a并加上昨天的日期</span><br></pre></td></tr></table></figure></p><p>整体结构很简单。<br>相当于在备份a前加了两个判断。</p><p>我讨厌大规模的for循环、嵌套for循环，但却喜欢1的for循环。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;喜欢在循环、函数里使用多个单行的if判断，如果true直接跳出。&lt;br&gt;类似常用的传值类型判断。&lt;br&gt;类似以下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def func(a):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if a&amp;#x3D;&amp;#x3D;&amp;quot;&amp;quot;:print(&amp;quot;empty value&amp;quot;);return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if a%10&amp;#x3D;&amp;#x3D;0:print(&amp;quot;err vaule&amp;quot;);return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in range(100):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if key1 not in dict1:print(&amp;quot;err key&amp;quot;);continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if dict1[key1]&amp;#x3D;&amp;#x3D;&amp;quot;&amp;quot;:print(&amp;quot;empty value&amp;quot;);continue&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这种句式的好处是逻辑非常清晰。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="方法" scheme="http://weehaa.top/tags/%E6%96%B9%E6%B3%95/"/>
    
      <category term="python" scheme="http://weehaa.top/tags/python/"/>
    
  </entry>
  
</feed>
